<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frequentist on [R]eliability</title>
    <link>/categories/frequentist/</link>
    <description>Recent content in Frequentist on [R]eliability</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Thu, 17 Nov 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/categories/frequentist/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Power Analysis for a DV Test - Frequentist and Bayesian Estimation in R </title>
      <link>/post/power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;When testing is costly or resource intensive, it’s not uncommon for management to ask an engineer “what are the chances that we pass?”. The answer will depend on the team’s collection of domain knowledge around the product and requirement but also in how the question is interpreted. It will also be sensitive to sample size considerations. In this post, I will show how to conduct an analysis to inform the response from both a Frequentist and Bayesian perspective. Simulation will be used whenever possible to avoid the need for external references and the predictions will be used to inform a recommendation of sample size.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#libraries&#34;&gt;Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#background-and-requirements&#34;&gt;Background and Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assumptions-and-plan&#34;&gt;Assumptions and Plan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#predicate-data&#34;&gt;Predicate Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#frequentist&#34;&gt;Frequentist&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#simulated-experiments-with-a-single-set-of-assumed-parameters&#34;&gt;Simulated experiments with a single set of assumed parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#simulate-the-data&#34;&gt;Simulate the Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calculate-frequency-of-success&#34;&gt;Calculate Frequency of Success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualize&#34;&gt;Visualize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nested-simulation-with-many-sets-of-parameters&#34;&gt;Nested Simulation with Many Sets of Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#simulated-the-data&#34;&gt;Simulated the Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calculate-frequency-of-success&#34;&gt;Calculate Frequency of Success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualize---power-curves&#34;&gt;Visualize - Power Curves&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bayesian&#34;&gt;Bayesian&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#priors&#34;&gt;Priors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#specify-priors&#34;&gt;Specify Priors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualize-prior-pred&#34;&gt;Visualize Prior Pred&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data&#34;&gt;Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#specify-data&#34;&gt;Specify Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#likelihood-and-model-fitting&#34;&gt;Likelihood and Model Fitting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fit-model-with-brms&#34;&gt;Fit Model with brms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualize-chains-and-posterior&#34;&gt;Visualize Chains and Posterior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#examine-posterior-draws&#34;&gt;Examine Posterior Draws&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#use-posterior-to-estimate-probability-of-passing-with-various-sample-sizes&#34;&gt;Use Posterior to Estimate Probability of Passing with Various Sample Sizes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#simulate-the-data&#34;&gt;Simulate the Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aggregate-probability-of-passing-by-sample-size&#34;&gt;Aggregate Probability of Passing by Sample Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sessioninfo&#34;&gt;SessionInfo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Libraries&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(tolerance)
library(patchwork)
library(ggrepel)
library(gt)
library(ggExtra)
library(brms)
library(here)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;background-and-requirements&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background and Requirements&lt;/h2&gt;
&lt;p&gt;We need some sort of performance test for this toy problem so let’s consider pitting corrosion resistance. Specifically, we are interested in data generated during cyclic potentiodynamic polarization (CPP) testing of a nitinol stent. The data is expressed as the difference between the breakdown potential Eb the rest potential Er, both relative to a reference electrode. The magnitude of this difference corresponds to the expected corrosion resistance in the body with larger values being better.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;assumptions-and-plan&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Assumptions and Plan&lt;/h2&gt;
&lt;p&gt;We’ll assume that our device has 1-sided, lower spec limit of &lt;em&gt;+300 mV&lt;/em&gt; as a requirement. We’ll also assume that based on our risk analysis procedure, pitting corrosion falls in a zone mandating that at least 90% of the population will meet the requirement with 90% confidence. Thus, we need to use our test data to create a 1-sided, 90/90 tolerance interval to compare against the requirements. If you are unfamiliar with tolerance intervals, refer to &lt;a href=&#34;https://rileyking.netlify.app/post/exploring-frequentist-and-bayesian-tolerance-intervals-in-r/&#34;&gt;this older post of mine&lt;/a&gt;. We’ll also assume that the default sample size would be n=9, chosen somewhat arbitrarily (we’ll consider other sample sizes later on).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;predicate-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Predicate Data&lt;/h2&gt;
&lt;p&gt;We would never go into any late-stage testing without some directional data from pilot studies or predicate devices. These data are usually sparse and they come with caveats, but they inform the range or possible expectations. In this example, let’s assume we have n=3 data points from early feasibility testing of a early prototype for our product. We’ll throw them into a table and then quickly check some summary stats. From testing other products and reviewing literature, we also know that the population of Eb - Er data for a particular configuration tend to be normally distributed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;legacy_data_tbl &amp;lt;- tibble(eb_minus_er = c(424, 543, 571))

sum_data &amp;lt;- legacy_data_tbl %&amp;gt;%
  summarize(mean = mean(eb_minus_er),
            sd = sd(eb_minus_er)) %&amp;gt;%
  mutate(across(is.numeric, round, digits = 1))

sum_data %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;cxrtutiaur&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#cxrtutiaur .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cxrtutiaur .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxrtutiaur .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cxrtutiaur .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cxrtutiaur .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxrtutiaur .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxrtutiaur .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cxrtutiaur .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cxrtutiaur .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cxrtutiaur .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cxrtutiaur .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cxrtutiaur .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cxrtutiaur .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cxrtutiaur .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#cxrtutiaur .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#cxrtutiaur .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cxrtutiaur .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#cxrtutiaur .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxrtutiaur .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#cxrtutiaur .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxrtutiaur .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cxrtutiaur .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cxrtutiaur .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxrtutiaur .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxrtutiaur .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#cxrtutiaur .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxrtutiaur .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#cxrtutiaur .gt_left {
  text-align: left;
}

#cxrtutiaur .gt_center {
  text-align: center;
}

#cxrtutiaur .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cxrtutiaur .gt_font_normal {
  font-weight: normal;
}

#cxrtutiaur .gt_font_bold {
  font-weight: bold;
}

#cxrtutiaur .gt_font_italic {
  font-style: italic;
}

#cxrtutiaur .gt_super {
  font-size: 65%;
}

#cxrtutiaur .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sd&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;frequentist&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Frequentist&lt;/h2&gt;
&lt;div id=&#34;simulated-experiments-with-a-single-set-of-assumed-parameters&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Simulated experiments with a single set of assumed parameters&lt;/h3&gt;
&lt;p&gt;For the Frequentist simulation, our plan is to specify the parameters of the assumed population and then repeat a simulated experiment may times. For each rep of the sim we assess the resultant tolerance limit against the requirement. This tells us the long-run frequency (interpreted as probability in the frequentist framework) of passing the test based on our experimental setup and the assumed parameters. Later on, we can adjust the sample size or the assumed population parameters to see how our chance of passing is affected.&lt;/p&gt;
&lt;p&gt;Let’s do 1 full simulation using a sample size of n=9 and a mean and sd taken from our predicate data shown above.&lt;/p&gt;
&lt;div id=&#34;simulate-the-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Simulate the Data&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reps &amp;lt;- 1000
set.seed(127)
n &amp;lt;- 9


single_sim_tbl &amp;lt;- 
  tibble(
  n = n,
  mean = sum_data$mean, #mean from predicate data
  sd = sum_data$sd) %&amp;gt;% #ds from predicate data
  slice(rep(1:n(), each = reps)) %&amp;gt;%
  mutate(replicate = seq(from = 1, to = reps)) %&amp;gt;%
  mutate(sim_data = pmap(.l = list(n = n, mean = mean, sd = sd), .f = rnorm)) %&amp;gt;% #create the random data points, n=9 per sim
  unnest() %&amp;gt;%
  group_by(mean, sd, replicate) %&amp;gt;%
  summarize(ltl = normtol.int(sim_data, P = .9, alpha = .1)) %&amp;gt;% #calculate 90/90 tolerance interval
  unnest() %&amp;gt;%
  ungroup() %&amp;gt;%
  rename(ltl = &amp;quot;1-sided.lower&amp;quot;) %&amp;gt;%
  select(1:7) %&amp;gt;%
  mutate(fail = case_when( 
    ltl &amp;lt;= 300 ~ 1,
    TRUE ~ 0)) %&amp;gt;% #flag failures
  mutate(across(c(x.bar, ltl), round, digits = 1))


single_sim_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;pdrxpyqqcj&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pdrxpyqqcj .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pdrxpyqqcj .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pdrxpyqqcj .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pdrxpyqqcj .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pdrxpyqqcj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pdrxpyqqcj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pdrxpyqqcj .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pdrxpyqqcj .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pdrxpyqqcj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pdrxpyqqcj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pdrxpyqqcj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pdrxpyqqcj .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pdrxpyqqcj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pdrxpyqqcj .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pdrxpyqqcj .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pdrxpyqqcj .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pdrxpyqqcj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pdrxpyqqcj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdrxpyqqcj .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pdrxpyqqcj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdrxpyqqcj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pdrxpyqqcj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pdrxpyqqcj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pdrxpyqqcj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pdrxpyqqcj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pdrxpyqqcj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pdrxpyqqcj .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#pdrxpyqqcj .gt_left {
  text-align: left;
}

#pdrxpyqqcj .gt_center {
  text-align: center;
}

#pdrxpyqqcj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pdrxpyqqcj .gt_font_normal {
  font-weight: normal;
}

#pdrxpyqqcj .gt_font_bold {
  font-weight: bold;
}

#pdrxpyqqcj .gt_font_italic {
  font-style: italic;
}

#pdrxpyqqcj .gt_super {
  font-size: 65%;
}

#pdrxpyqqcj .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;replicate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;alpha&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;P&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x.bar&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ltl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;fail&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;522.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;410.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;515.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;437.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;480.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;283.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;518.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;315.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;510.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;353.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;512.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;493.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;286.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;calculate-frequency-of-success&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Calculate Frequency of Success&lt;/h4&gt;
&lt;p&gt;Having generated and stored the above simulation, it is straightforward to calculate the predicted success rate. We see that the long run frequency of success is 84%, conditional on all of our strict assumptions about population parameters and fixed sample size:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;single_sim_tbl %&amp;gt;%
  summarize(total_simulated_experiments = n(),
            sum_pass = n() - sum(fail)) %&amp;gt;%
  mutate(prop_pass = sum_pass/total_simulated_experiments) %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;ssgcfuqezb&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ssgcfuqezb .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ssgcfuqezb .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ssgcfuqezb .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ssgcfuqezb .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ssgcfuqezb .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ssgcfuqezb .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ssgcfuqezb .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ssgcfuqezb .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ssgcfuqezb .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ssgcfuqezb .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ssgcfuqezb .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ssgcfuqezb .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ssgcfuqezb .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ssgcfuqezb .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ssgcfuqezb .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ssgcfuqezb .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ssgcfuqezb .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ssgcfuqezb .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ssgcfuqezb .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ssgcfuqezb .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ssgcfuqezb .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ssgcfuqezb .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ssgcfuqezb .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ssgcfuqezb .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ssgcfuqezb .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ssgcfuqezb .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ssgcfuqezb .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ssgcfuqezb .gt_left {
  text-align: left;
}

#ssgcfuqezb .gt_center {
  text-align: center;
}

#ssgcfuqezb .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ssgcfuqezb .gt_font_normal {
  font-weight: normal;
}

#ssgcfuqezb .gt_font_bold {
  font-weight: bold;
}

#ssgcfuqezb .gt_font_italic {
  font-style: italic;
}

#ssgcfuqezb .gt_super {
  font-size: 65%;
}

#ssgcfuqezb .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;total_simulated_experiments&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sum_pass&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;prop_pass&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;844&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.844&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Visualize&lt;/h4&gt;
&lt;p&gt;Here we look at the means and lower tolerance limits (LTLs) from the simulation to help us gut check the conclusions and further understand what is going on.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;single_sim_tbl %&amp;gt;% 
  pivot_longer(cols = c(x.bar, ltl), names_to = &amp;quot;param&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;%
  mutate(param = case_when(param == &amp;quot;x.bar&amp;quot; ~ &amp;quot;mean&amp;quot;,
                           TRUE ~ &amp;quot;lower_tolerance_limit&amp;quot;)) %&amp;gt;%
  ggplot(aes(x = param, y = value)) +
  geom_line(aes(group = replicate), size = .1, alpha = .1) +
  geom_jitter(aes(color = param), size = .4, alpha = .4, width = .01) +
  geom_hline(yintercept = 300, color = &amp;quot;firebrick&amp;quot;, linetype = 2) +
  theme_classic() +
  theme(legend.title=element_blank()) +
  labs(title = &amp;quot;Means and Lower Tolerance Limits for 1000 Simulated Experiments&amp;quot;,
       subtitle = &amp;quot;Each sim: n=9 data points draws from a normal distribution&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;Eb - Er [mV SCE]&amp;quot;,
       caption = &amp;quot;red dotted line indicates lower spec limit&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-11-17-power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And here we look by simulation run number and add the marginal distributions for mean and sd.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;int_plot &amp;lt;- single_sim_tbl %&amp;gt;%
  ggplot(aes(group = replicate)) +
  geom_segment(aes(x = replicate, y = x.bar, xend = replicate, yend = ltl), size = .2, alpha = .2) +
  geom_point(data = single_sim_tbl %&amp;gt;% 
               pivot_longer(cols = c(x.bar, ltl), names_to = &amp;quot;param&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;%
               mutate(param = case_when(param == &amp;quot;x.bar&amp;quot; ~ &amp;quot;Sample Mean&amp;quot;, TRUE ~ &amp;quot;1-Sided Lower Tolerance Limit&amp;quot;)), 
               aes(x = replicate, y = value, color = param), size = .6) +
  geom_hline(yintercept = 300, linetype = 2, color = &amp;quot;firebrick&amp;quot;) +
  theme_classic() +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  labs(y = &amp;quot;Eb - Er (mV SCE)&amp;quot;,
       x = &amp;quot;Simulated Experiment Replicate Number&amp;quot;,
       title = &amp;quot;Means and Lower Tolerance Limits for 1000 Simulated Experiments&amp;quot;,
       subtitle = &amp;quot;Each sim: n=9 data points draws from a normal distribution&amp;quot;) +
  theme(legend.title=element_blank())

ggMarginal(int_plot,
  groupColour = TRUE,
  groupFill = TRUE,
  type = &amp;quot;density&amp;quot;,
  alpha = 0.7,
  margins = &amp;quot;y&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-11-17-power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;nested-simulation-with-many-sets-of-parameters&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Nested Simulation with Many Sets of Parameters&lt;/h3&gt;
&lt;p&gt;The simulation above makes strict assumptions about the population parameters and uses only a single fixed sample size. we know intuitively that there is lot-to-lot variability and we have our choice of sample size, within reason, when we proceed with our eventual real-world test. Thus, what we really want to understand is the probability of success for a wide range of parameter assumptions and sample sizes. For that, we’ll need a more complex simulation.&lt;/p&gt;
&lt;p&gt;In the code below, a grid of possibilities is explored for potential values of mean, sd, and sample size. Each permutation is a nested simulation of n=1000. Ranges explored (the range for mean goes mostly lower and the range for sd goes mostly higher as we really want to understand what happens if our predicate data was overly optimistic):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 300 to 500 mV&lt;/li&gt;
&lt;li&gt;sd: 75 to 179 mV&lt;/li&gt;
&lt;li&gt;n: 5 to 17 parts&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;simulated-the-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Simulated the Data&lt;/h4&gt;
&lt;p&gt;The workflow below is very similar to the single simulation section with a few exceptions. The expand_grid() function is what generated all combinations of the specified sequences for mean, sd, and n. slice() is used to copy and append rows, and a “scenario” column is added to track each permutation of the 3 variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2015)
reps &amp;lt;-  1000

mean = c(seq(from = 300, to = 500, by = 50), sum_data$mean)
sd = c(seq(from = 75, to = 175, by = 25), sum_data$sd)
n = seq(from = 5, to = 17, by = 2)

full_even_sim_tbl &amp;lt;-  expand_grid(mean, sd, n) %&amp;gt;%
  mutate(mean = mean %&amp;gt;% round(0),
         sd = sd %&amp;gt;% round(0)) %&amp;gt;%
  mutate(scenario = seq(from = 1, to = nrow(.))) %&amp;gt;%
  slice(rep(1:n(), each = reps)) %&amp;gt;%
  mutate(replicate_number = rep(seq(from = 1, to = reps), nrow(.)/reps)) %&amp;gt;%
  mutate(sim_data = pmap(.l = list(n = n, mean = mean, sd=sd), .f = rnorm)) %&amp;gt;%
  unnest(cols = everything()) %&amp;gt;%
  group_by(mean, sd, scenario, replicate_number, n) %&amp;gt;%
  summarize(ltl = normtol.int(sim_data, P = .9, alpha = .1)) %&amp;gt;%
  unnest(cols = everything()) %&amp;gt;%
  ungroup() %&amp;gt;%
  rename(ltl = &amp;#39;1-sided.lower&amp;#39;,
         utl = &amp;#39;1-sided.upper&amp;#39;) %&amp;gt;%
  mutate(fail = case_when(ltl &amp;lt;= 300 ~ 1,
         TRUE ~ 0))

full_even_sim_tbl %&amp;gt;% 
  mutate(across(c(x.bar, ltl, utl), round, digits = 1)) %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;teihcoazgx&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#teihcoazgx .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#teihcoazgx .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#teihcoazgx .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#teihcoazgx .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#teihcoazgx .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#teihcoazgx .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#teihcoazgx .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#teihcoazgx .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#teihcoazgx .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#teihcoazgx .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#teihcoazgx .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#teihcoazgx .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#teihcoazgx .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#teihcoazgx .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#teihcoazgx .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#teihcoazgx .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#teihcoazgx .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#teihcoazgx .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#teihcoazgx .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#teihcoazgx .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#teihcoazgx .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#teihcoazgx .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#teihcoazgx .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#teihcoazgx .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#teihcoazgx .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#teihcoazgx .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#teihcoazgx .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#teihcoazgx .gt_left {
  text-align: left;
}

#teihcoazgx .gt_center {
  text-align: center;
}

#teihcoazgx .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#teihcoazgx .gt_font_normal {
  font-weight: normal;
}

#teihcoazgx .gt_font_bold {
  font-weight: bold;
}

#teihcoazgx .gt_font_italic {
  font-style: italic;
}

#teihcoazgx .gt_super {
  font-size: 65%;
}

#teihcoazgx .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;scenario&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;replicate_number&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;n&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;alpha&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;P&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x.bar&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ltl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;utl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;fail&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;258.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;97.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;419.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;294.2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;58.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;529.6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;323.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;172.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;473.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;270.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;90.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;450.6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;302.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;231.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;372.2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..251999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;252000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;513&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;175&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;245&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;17&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;532.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;191.6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;873.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;calculate-frequency-of-success-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Calculate Frequency of Success&lt;/h4&gt;
&lt;p&gt;Now, each scenario (combination of assumed mean, sd, and sample size) has its own probability (long run frequency) of passing:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary_tbl &amp;lt;- full_even_sim_tbl %&amp;gt;%
  group_by(mean, sd, n, max(replicate_number)) %&amp;gt;%
  summarize(number_fail = sum(fail)) %&amp;gt;%
  rename(reps = &amp;#39;max(replicate_number)&amp;#39;) %&amp;gt;%
  mutate(avg = stringr::str_glue(&amp;quot;mean Eb-Er = {as_factor(mean)} mV [SCE]&amp;quot;)) %&amp;gt;%
  mutate(prop_pass = 1-(number_fail / reps)) %&amp;gt;%
  ungroup()

summary_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;vkukobschs&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#vkukobschs .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vkukobschs .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vkukobschs .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vkukobschs .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vkukobschs .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vkukobschs .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vkukobschs .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vkukobschs .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vkukobschs .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vkukobschs .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vkukobschs .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vkukobschs .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#vkukobschs .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vkukobschs .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#vkukobschs .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#vkukobschs .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vkukobschs .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#vkukobschs .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vkukobschs .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#vkukobschs .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vkukobschs .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vkukobschs .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vkukobschs .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vkukobschs .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vkukobschs .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#vkukobschs .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vkukobschs .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#vkukobschs .gt_left {
  text-align: left;
}

#vkukobschs .gt_center {
  text-align: center;
}

#vkukobschs .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vkukobschs .gt_font_normal {
  font-weight: normal;
}

#vkukobschs .gt_font_bold {
  font-weight: bold;
}

#vkukobschs .gt_font_italic {
  font-style: italic;
}

#vkukobschs .gt_super {
  font-size: 65%;
}

#vkukobschs .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;n&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;reps&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;number_fail&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;avg&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;prop_pass&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;997&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 300 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.003&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 300 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.000&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 300 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.000&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 300 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.000&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;75&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 300 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.000&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..251&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;252&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;513&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;175&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;17&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;938&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;mean Eb-Er = 513 mV [SCE]&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.062&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize---power-curves&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Visualize - Power Curves&lt;/h4&gt;
&lt;p&gt;Plotting these data produce so-called power curves from which we can easily see trends for probability of passing based on the parameter assumptions and our choice of sample size. Constructing these curves provide a principled way to select a reasonable sample size.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary_tbl %&amp;gt;%
  ggplot(aes(x = sd, y = prop_pass)) +
  geom_point(aes(color = as_factor(n))) +
  geom_line(aes(color = as_factor(n))) +
  geom_vline(xintercept = sum_data$sd, color = &amp;quot;firebrick&amp;quot;, linetype = 2) +
  facet_wrap(~ avg) +
  lims(x = c(75, 175)) +
  scale_color_discrete(name = &amp;quot;Sample Size&amp;quot;) +
#scale_color_viridis_d(option = &amp;quot;C&amp;quot;, end = .8) +
  labs(x = &amp;quot;Standard Deviation (mV [SCE])&amp;quot;,
       y = str_glue(&amp;quot;Passing Proportion\nBased on n={reps} simulations each&amp;quot;)) +
  theme_bw() +
  labs(title = &amp;quot;Predicted Power Curves for Simulated Corrosion Experiments&amp;quot;,
       subtitle = &amp;quot;as a function of mean, standard deviation, and sample size&amp;quot;,
       caption = &amp;quot;513 mV facet represents predicate mean, red dotted line represents predicate sd&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-11-17-power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;
We note that at the lower means and higher sds we would have very low chance of passing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bayesian&lt;/h2&gt;
&lt;p&gt;As engineers, we can look through the range of possible inputs and think about how plausible they might be based on our understanding of the product and domain. But there is no formal way to leverage that knowledge in the frequentist framework. For that, we need a Bayesian approach.&lt;/p&gt;
&lt;div id=&#34;priors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Priors&lt;/h3&gt;
&lt;p&gt;In the code below, we want to ask ourselves what values are reasonable for the parameters of interest. We happen to know from other devices and literature that the mean tends to fall in the 200-800 range. We select a t distribution on this parameter centered at 500 with a few degrees of freedom. This is conservative since it spreads our “belief” wider than a normal distribution, including more options in the tails. For the sd, we apply a uniform distribution over a generous range, making sure to keep all values positive.&lt;/p&gt;
&lt;div id=&#34;specify-priors&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Specify Priors&lt;/h4&gt;
&lt;p&gt;We put these into this table form because we’ll want to plot these curves to confirm visually that our assumptions make sense.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prior_pred_tbl &amp;lt;- tibble(
  mu = rstudent_t(n = 300, df = 3, mu = 500, sigma = 100),
  sig = runif(300, min = 20, max = 200) %&amp;gt;% abs()
) %&amp;gt;%
  mutate(row_id = row_number()) %&amp;gt;%
  select(row_id, everything()) %&amp;gt;%
  mutate(plotted_y_data = map2(mu, sig, ~ tibble(
    x = seq(-200, 1000, length.out = 10000),
    y = dnorm(x, .x, .y)
  ))) %&amp;gt;%
#  slice(1) %&amp;gt;%
  unnest() %&amp;gt;%
  mutate(model = &amp;quot;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&amp;quot;)

prior_pred_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;mhnwryimjo&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#mhnwryimjo .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mhnwryimjo .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mhnwryimjo .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mhnwryimjo .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mhnwryimjo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mhnwryimjo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mhnwryimjo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mhnwryimjo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mhnwryimjo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mhnwryimjo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mhnwryimjo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mhnwryimjo .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#mhnwryimjo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mhnwryimjo .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#mhnwryimjo .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#mhnwryimjo .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mhnwryimjo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#mhnwryimjo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mhnwryimjo .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#mhnwryimjo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mhnwryimjo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mhnwryimjo .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mhnwryimjo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mhnwryimjo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mhnwryimjo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#mhnwryimjo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mhnwryimjo .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#mhnwryimjo .gt_left {
  text-align: left;
}

#mhnwryimjo .gt_center {
  text-align: center;
}

#mhnwryimjo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mhnwryimjo .gt_font_normal {
  font-weight: normal;
}

#mhnwryimjo .gt_font_bold {
  font-weight: bold;
}

#mhnwryimjo .gt_font_italic {
  font-style: italic;
}

#mhnwryimjo .gt_super {
  font-size: 65%;
}

#mhnwryimjo .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;row_id&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mu&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sig&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;y&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;model&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;399.9662&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;134.5556&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-200.00&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.428195e-07&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;399.9662&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;134.5556&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-199.88&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.433886e-07&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;399.9662&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;134.5556&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-199.76&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.439598e-07&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;399.9662&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;134.5556&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-199.64&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.445331e-07&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;399.9662&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;134.5556&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-199.52&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.451087e-07&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..2999999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3000000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;585.2949&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;29.1041&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000.00&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.118222e-46&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ student(3, 500, 100), sigma ~ unif(20,200)&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize-prior-pred&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Visualize Prior Pred&lt;/h4&gt;
&lt;p&gt;This vis shows a variety of possible outcomes for Eb-Er before seeing the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prior_pred_tbl %&amp;gt;%
  ggplot(aes(x = x, y = y, group = row_id)) +
  geom_line(aes(x, y), size = .5, alpha = .2, color = &amp;quot;#2c3e50&amp;quot;) +
  labs(
    x = &amp;quot;mV [SCE]&amp;quot;,
    y = &amp;quot;&amp;quot;,
    title = &amp;quot;Prior Predictive Simulations&amp;quot;
  ) +
  theme_minimal() + theme(
  axis.text.y = element_blank(),
  axis.ticks.y = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-11-17-power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;div id=&#34;specify-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Specify Data&lt;/h4&gt;
&lt;p&gt;We re-enter our legacy data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p_tbl &amp;lt;- tibble(p = c(424, 543, 571))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;likelihood-and-model-fitting&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Likelihood and Model Fitting&lt;/h3&gt;
&lt;div id=&#34;fit-model-with-brms&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Fit Model with brms&lt;/h4&gt;
&lt;p&gt;Having specified our data and priors, we can assume a likelihood and brms can do the rest. Here we assume Gaussian (normal) for the likelihood of the data and copy our priors from the previous section. Once fit, we’ll have access to a posterior in table form comprised of credible values for the mean and sd for many possible normal distributions. This is similar to the grid of values we build manually in the frequentist section to generate power curve, but now now they are weighted by plausibility.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pa_mod_1 &amp;lt;-
 brm(
   data = p_tbl, family = gaussian,
   p ~ 1,
  prior = c(
    prior(student_t(3, 500, 100), class = Intercept),
    prior(uniform(1, 200), class = sigma)),
  iter = 41000, warmup = 40000, chains = 4, cores = 4,
  seed = 4
)

summary(pa_mod_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Family: gaussian 
##   Links: mu = identity; sigma = identity 
## Formula: p ~ 1 
##    Data: p_tbl (Number of observations: 3) 
##   Draws: 4 chains, each with iter = 41000; warmup = 40000; thin = 1;
##          total post-warmup draws = 4000
## 
## Population-Level Effects: 
##           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## Intercept   508.58     50.22   402.45   608.44 1.00     1314      988
## 
## Family Specific Parameters: 
##       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## sigma   105.34     40.47    44.68   190.13 1.00     1198     1360
## 
## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
## and Tail_ESS are effective sample size measures, and Rhat is the potential
## scale reduction factor on split chains (at convergence, Rhat = 1).&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize-chains-and-posterior&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Visualize Chains and Posterior&lt;/h4&gt;
&lt;p&gt;This section provided diagnostic plots for the Markov Chain Monte Carlo. Chains look well dispersed and relatively similar (good) with a “fuzzy caterpillar” look that we want.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(pa_mod_1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-11-17-power-analysis-for-a-dv-test-frequentist-and-bayesian-estimation-in-r_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examine-posterior-draws&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Examine Posterior Draws&lt;/h4&gt;
&lt;p&gt;Let’s take a peek at the table of samples from the posterior. They look reasonable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pa_mod_1_post_tbl &amp;lt;- posterior_samples(pa_mod_1) %&amp;gt;%
  select(-lp__) %&amp;gt;%
  rename(&amp;quot;mu&amp;quot; = b_Intercept)

pa_mod_1_post_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;scenvywpoa&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#scenvywpoa .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#scenvywpoa .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#scenvywpoa .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#scenvywpoa .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#scenvywpoa .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#scenvywpoa .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#scenvywpoa .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#scenvywpoa .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#scenvywpoa .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#scenvywpoa .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#scenvywpoa .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#scenvywpoa .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#scenvywpoa .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#scenvywpoa .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#scenvywpoa .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#scenvywpoa .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#scenvywpoa .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#scenvywpoa .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#scenvywpoa .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#scenvywpoa .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#scenvywpoa .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#scenvywpoa .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#scenvywpoa .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#scenvywpoa .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#scenvywpoa .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#scenvywpoa .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#scenvywpoa .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#scenvywpoa .gt_left {
  text-align: left;
}

#scenvywpoa .gt_center {
  text-align: center;
}

#scenvywpoa .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#scenvywpoa .gt_font_normal {
  font-weight: normal;
}

#scenvywpoa .gt_font_bold {
  font-weight: bold;
}

#scenvywpoa .gt_font_italic {
  font-style: italic;
}

#scenvywpoa .gt_super {
  font-size: 65%;
}

#scenvywpoa .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mu&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sigma&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3346&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.91147&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;570.3584&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;102.00744&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;625.1128&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;98.52465&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;598.0249&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;110.21080&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;521.2838&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;88.29519&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..3999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;593.9553&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;87.95511&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;use-posterior-to-estimate-probability-of-passing-with-various-sample-sizes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Use Posterior to Estimate Probability of Passing with Various Sample Sizes&lt;/h3&gt;
&lt;p&gt;Now that we have the posterior, we can repeat a series of simulations using parameters from each row of the sampled posterior. This will preserve the uncertainty captured in the posterior and allow us to estimate the probability of passing, weighted by our beliefs and the informed by the data.&lt;/p&gt;
&lt;div id=&#34;simulate-the-data-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Simulate the Data&lt;/h4&gt;
&lt;p&gt;Knowing that the posterior draws represent credible values population mean and sd, our goal is to produce a new simulation that conducts and a simulated experiment over every credible combination. This is very similar to our frequentist version above, but instead of just copying arbitrary combinations of parameters over a grid, here the posterior draws have already selected credible values for the parameters. This is sort of like a “weighted” version of the frequentist simulation that is compatible with our pre-existing beliefs as established by the priors and then updated though the predicate data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2015)
reps &amp;lt;-  1000

n = seq(from = 5, to = 17, by = 2)

b_sim_tbl &amp;lt;- pa_mod_1_post_tbl %&amp;gt;%
  rename(mean = mu,
         sd = sigma) %&amp;gt;%
  mutate(scenario = seq(from = 1, to = nrow(.))) %&amp;gt;%
  slice(rep(1:n(), each = length(n))) %&amp;gt;%
  mutate(num_draws = rep(x = n, times = nrow(.)/length(n))) %&amp;gt;%
  mutate(dat = pmap(.l = list(n = num_draws, mean = mean, sd=sd), .f = rnorm)) %&amp;gt;%
  unnest(cols = everything()) %&amp;gt;%
  group_by(mean, sd, scenario, num_draws) %&amp;gt;%
  summarize(ltl = normtol.int(dat, P = .9, alpha = .1)) %&amp;gt;%
  unnest(cols = everything()) %&amp;gt;%
  ungroup() %&amp;gt;%
  arrange(scenario) %&amp;gt;%
  rename(ltl = &amp;#39;1-sided.lower&amp;#39;,
         utl = &amp;#39;1-sided.upper&amp;#39;) %&amp;gt;%
  mutate(fail = case_when(ltl &amp;lt;= 300 ~ 1,
         TRUE ~ 0)) %&amp;gt;%
  select(-utl) %&amp;gt;%
  mutate(across(is.numeric, round, digits = 1))
  
b_sim_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;mnbyzravio&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#mnbyzravio .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mnbyzravio .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mnbyzravio .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mnbyzravio .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mnbyzravio .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mnbyzravio .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mnbyzravio .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mnbyzravio .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mnbyzravio .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mnbyzravio .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mnbyzravio .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mnbyzravio .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#mnbyzravio .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mnbyzravio .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#mnbyzravio .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#mnbyzravio .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mnbyzravio .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#mnbyzravio .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mnbyzravio .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#mnbyzravio .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mnbyzravio .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mnbyzravio .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mnbyzravio .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mnbyzravio .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mnbyzravio .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#mnbyzravio .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mnbyzravio .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#mnbyzravio .gt_left {
  text-align: left;
}

#mnbyzravio .gt_center {
  text-align: center;
}

#mnbyzravio .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mnbyzravio .gt_font_normal {
  font-weight: normal;
}

#mnbyzravio .gt_font_bold {
  font-weight: bold;
}

#mnbyzravio .gt_font_italic {
  font-style: italic;
}

#mnbyzravio .gt_super {
  font-size: 65%;
}

#mnbyzravio .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;scenario&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;num_draws&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;alpha&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;P&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x.bar&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ltl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;fail&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;405.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;136.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;462.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;168.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;466.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;241.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;493.6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;183.8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;474.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;124.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;477.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;224.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..27999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;28000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;594.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;88.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;17&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;541.4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;392.9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;aggregate-probability-of-passing-by-sample-size&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Aggregate Probability of Passing by Sample Size&lt;/h2&gt;
&lt;p&gt;Count the number of simulations that pass/fail at each sample size condition:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;agg_tbl &amp;lt;- b_sim_tbl %&amp;gt;%
  group_by(num_draws) %&amp;gt;%
  summarize(total_fail = sum(fail),
            total_trials = 4000) %&amp;gt;%
  ungroup() %&amp;gt;%
  rename(sample_size = num_draws) %&amp;gt;%
  mutate(prob_passing = 1-(total_fail / total_trials)) %&amp;gt;%
  mutate(prob_passing = scales::percent(prob_passing, accuracy = 1))

agg_tbl %&amp;gt;%
  select(sample_size, prob_passing) %&amp;gt;%
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;pfqjmlckth&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pfqjmlckth .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pfqjmlckth .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pfqjmlckth .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pfqjmlckth .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pfqjmlckth .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pfqjmlckth .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pfqjmlckth .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pfqjmlckth .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pfqjmlckth .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pfqjmlckth .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pfqjmlckth .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pfqjmlckth .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pfqjmlckth .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pfqjmlckth .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pfqjmlckth .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pfqjmlckth .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pfqjmlckth .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pfqjmlckth .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pfqjmlckth .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pfqjmlckth .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pfqjmlckth .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pfqjmlckth .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pfqjmlckth .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pfqjmlckth .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pfqjmlckth .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pfqjmlckth .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pfqjmlckth .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#pfqjmlckth .gt_left {
  text-align: left;
}

#pfqjmlckth .gt_center {
  text-align: center;
}

#pfqjmlckth .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pfqjmlckth .gt_font_normal {
  font-weight: normal;
}

#pfqjmlckth .gt_font_bold {
  font-weight: bold;
}

#pfqjmlckth .gt_font_italic {
  font-style: italic;
}

#pfqjmlckth .gt_super {
  font-size: 65%;
}

#pfqjmlckth .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sample_size&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;prob_passing&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;42%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;51%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;54%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;58%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;60%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;15&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;63%&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;17&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;63%&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Based on this estimate, the increase in probability of passing by going from, for example, n=9 to n=13 is 6% which does not seem significant enough to recommend the associated increase in cost and time for the larger sample size. However, if testing is cheap and easy, then going from, for example, n=9 to n=15 provides an estimated 9% increase in probability of passing.&lt;/p&gt;
&lt;p&gt;The Bayesian version of the workflow has allowed us to answer the question concisely: ‘what are our chances of passing?’. The Frequentist version gives a survey of possibilities but forces you to apply your domain knowledge after the fact in an unprincipled way to arrive at a decision.&lt;/p&gt;
&lt;p&gt;Both are useful - and I hope this post was useful to somebody too! Thank you for reading.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sessioninfo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SessionInfo&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 4.0.3 (2020-10-10)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 18363)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] here_1.0.1      brms_2.16.3     Rcpp_1.0.7      ggExtra_0.9    
##  [5] gt_0.3.1        ggrepel_0.9.1   patchwork_1.1.1 tolerance_2.0.0
##  [9] forcats_0.5.1   stringr_1.4.0   dplyr_1.0.7     purrr_0.3.4    
## [13] readr_2.1.1     tidyr_1.1.4     tibble_3.1.6    ggplot2_3.3.5  
## [17] tidyverse_1.3.1
## 
## loaded via a namespace (and not attached):
##   [1] readxl_1.3.1         backports_1.4.1      plyr_1.8.6          
##   [4] igraph_1.2.11        splines_4.0.3        crosstalk_1.2.0     
##   [7] rstantools_2.1.1     inline_0.3.19        digest_0.6.28       
##  [10] htmltools_0.5.2      rsconnect_0.8.25     fansi_0.5.0         
##  [13] magrittr_2.0.1       checkmate_2.0.0      memoise_2.0.1       
##  [16] tzdb_0.2.0           modelr_0.1.8         extrafont_0.17      
##  [19] RcppParallel_5.1.5   matrixStats_0.61.0   xts_0.12.1          
##  [22] extrafontdb_1.0      pkgdown_2.0.1        prettyunits_1.1.1   
##  [25] colorspace_2.0-2     rvest_1.0.2          haven_2.4.3         
##  [28] xfun_0.29            callr_3.7.0          crayon_1.4.2        
##  [31] jsonlite_1.7.2       lme4_1.1-27.1        zoo_1.8-9           
##  [34] glue_1.6.0           gtable_0.3.0         emmeans_1.7.2       
##  [37] V8_4.0.0             distributional_0.3.0 pkgbuild_1.3.1      
##  [40] Rttf2pt1_1.3.9       rstan_2.26.4         abind_1.4-5         
##  [43] scales_1.1.1         mvtnorm_1.1-3        DBI_1.1.2           
##  [46] miniUI_0.1.1.1       xtable_1.8-4         stats4_4.0.3        
##  [49] StanHeaders_2.26.4   DT_0.20              htmlwidgets_1.5.4   
##  [52] httr_1.4.2           threejs_0.3.3        posterior_1.2.0     
##  [55] ellipsis_0.3.2       pkgconfig_2.0.3      loo_2.4.1           
##  [58] farver_2.1.0         sass_0.4.0           dbplyr_2.1.1        
##  [61] utf8_1.2.2           labeling_0.4.2       tidyselect_1.1.1    
##  [64] rlang_0.4.11         reshape2_1.4.4       later_1.3.0         
##  [67] munsell_0.5.0        cellranger_1.1.0     tools_4.0.3         
##  [70] cachem_1.0.6         cli_3.1.0            generics_0.1.1      
##  [73] broom_0.7.11         ggridges_0.5.3       evaluate_0.14       
##  [76] fastmap_1.1.0        yaml_2.2.1           processx_3.5.2      
##  [79] knitr_1.34           fs_1.5.2             rgl_0.108.3         
##  [82] nlme_3.1-153         projpred_2.0.2       mime_0.12           
##  [85] xml2_1.3.3           compiler_4.0.3       bayesplot_1.8.1     
##  [88] shinythemes_1.2.0    rstudioapi_0.13      gamm4_0.2-6         
##  [91] curl_4.3.2           reprex_2.0.1         bslib_0.3.1         
##  [94] stringi_1.7.4        highr_0.9            ps_1.6.0            
##  [97] blogdown_0.15        Brobdingnag_1.2-6    lattice_0.20-45     
## [100] Matrix_1.4-0         nloptr_1.2.2.3       markdown_1.1        
## [103] shinyjs_2.1.0        tensorA_0.36.2       vctrs_0.3.8         
## [106] pillar_1.6.4         lifecycle_1.0.1      jquerylib_0.1.4     
## [109] bridgesampling_1.1-2 estimability_1.3     httpuv_1.6.5        
## [112] R6_2.5.1             bookdown_0.21        promises_1.2.0.1    
## [115] gridExtra_2.3        codetools_0.2-18     boot_1.3-28         
## [118] colourpicker_1.1.1   MASS_7.3-54          gtools_3.9.2        
## [121] assertthat_0.2.1     rprojroot_2.0.2      withr_2.4.3         
## [124] shinystan_2.5.0      mgcv_1.8-38          parallel_4.0.3      
## [127] hms_1.1.1            grid_4.0.3           minqa_1.2.4         
## [130] coda_0.19-4          rmarkdown_2.11       shiny_1.7.1         
## [133] lubridate_1.8.0      base64enc_0.1-3      dygraphs_1.1.1.6&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;For additional details about this testing, refer to ASTM F2129&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Trying to Trick Linear Regression - Estimating Coefficients for Variables in R</title>
      <link>/post/linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post we will try to trick linear regression into thinking that a redundant variable is statistically significant. By redundant, I mean a candidate predictor variable that in reality is just noise (no effect on the outcome) but that we might include in an experiment because we don’t know if it is important or not. The trick is that we can set up the data generating process such that a redundant variable is highly correlated with the response. In such cases, the naive intuition is that the model would get “confused” about the importance of this variable and perhaps identify it as significant, just as a casual observer might when viewing plots of variable vs. outcome, given that rise and fall together.&lt;/p&gt;
&lt;p&gt;It is commonly said that one should consider removing variables from the model when they are highly correlated to each other…but why? Because it messes with your model’s predictions? Because it messes with the estimation of the variable coefficients? Perhaps the uncertainty around the estimates? Let’s use the a simulation to see…&lt;/p&gt;
&lt;div id=&#34;load-libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Load Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(here)
library(broom)
library(gt)
library(GGally)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’re going to build this dataset from scratch because we want to control the coefficients of each variable and also the overall effect size. There is going to be one numeric outcome and multiple predictor variables which puts us squarely in the realm of multiple regression. The model for MR is shown below:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Y_i = \beta_0 + \beta_1 X_{i1} + \beta_2 X_{i2} + \ldots + \beta_p X_{ip} + \epsilon_i\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;for each observation &lt;span class=&#34;math inline&#34;&gt;\(i = 1, ... , n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In the formula above we consider n observations of one dependent variable and &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; independent variables. Thus, &lt;span class=&#34;math inline&#34;&gt;\(Yi\)&lt;/span&gt; is the &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;th observation of the dependent variable, &lt;span class=&#34;math inline&#34;&gt;\(Xij\)&lt;/span&gt; is &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;th observation of the &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;th independent variable, &lt;span class=&#34;math inline&#34;&gt;\(j = 1, 2, ..., p\)&lt;/span&gt;. The values &lt;span class=&#34;math inline&#34;&gt;\(βj\)&lt;/span&gt; represent parameters to be estimated, and &lt;span class=&#34;math inline&#34;&gt;\(εi\)&lt;/span&gt; is the &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;th independent identically distributed normal error.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s start by setting up some placeholder columns to hold the beta coefficients and the values of the x’s (predictors variables). Thinking ahead, we’ll want to be working row-wise to combine the coefficients, x’s, and error in order to generate an observation &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; for each row. Note that the values for the &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;`’s are just placeholders; we’ll assign them values after getting the structure of our dataframe into good shape. We’ll make 10 predictor variables total and 10 coefficients to go with them - a relatively large but still reasonable number of variables for a benchtop experiment in the medical device domain. The first coefficient is set to 1 so that the value of that variable will have a real, causal impact on the outcome. All other coefficients are set to zero, meaning they have no true effect with respect to generating the observations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;betas_tbl &amp;lt;- tibble(
  var_prefix = rep(&amp;quot;b&amp;quot;, 10),
  var_suffix = seq(from = 1, to = 10, by = 1)
) %&amp;gt;%
  mutate(var = str_glue(&amp;quot;{var_prefix}_{var_suffix}&amp;quot;) %&amp;gt;% as_factor()) %&amp;gt;%
  select(var) %&amp;gt;%
  mutate(case_1 = c(1, rep(0, 9))) %&amp;gt;%
  pivot_wider(names_from = &amp;quot;var&amp;quot;, values_from = &amp;quot;case_1&amp;quot;)

x_tbl &amp;lt;- tibble(
  var_prefix = rep(&amp;quot;x&amp;quot;, 10),
  var_suffix = seq(from = 1, to = 10, by = 1)
) %&amp;gt;%
  mutate(var = str_glue(&amp;quot;{var_prefix}_{var_suffix}&amp;quot;) %&amp;gt;% as_factor()) %&amp;gt;%
  select(var) %&amp;gt;%
  mutate(case_1 = rep(0, 10)) %&amp;gt;%
  pivot_wider(names_from = &amp;quot;var&amp;quot;, values_from = &amp;quot;case_1&amp;quot;)

betas_tbl %&amp;gt;%
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;lwhgcyvhal&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#lwhgcyvhal .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lwhgcyvhal .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lwhgcyvhal .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lwhgcyvhal .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lwhgcyvhal .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lwhgcyvhal .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lwhgcyvhal .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lwhgcyvhal .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lwhgcyvhal .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lwhgcyvhal .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lwhgcyvhal .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lwhgcyvhal .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#lwhgcyvhal .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lwhgcyvhal .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#lwhgcyvhal .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#lwhgcyvhal .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lwhgcyvhal .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#lwhgcyvhal .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lwhgcyvhal .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#lwhgcyvhal .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lwhgcyvhal .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lwhgcyvhal .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lwhgcyvhal .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lwhgcyvhal .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lwhgcyvhal .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#lwhgcyvhal .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lwhgcyvhal .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#lwhgcyvhal .gt_left {
  text-align: left;
}

#lwhgcyvhal .gt_center {
  text-align: center;
}

#lwhgcyvhal .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lwhgcyvhal .gt_font_normal {
  font-weight: normal;
}

#lwhgcyvhal .gt_font_bold {
  font-weight: bold;
}

#lwhgcyvhal .gt_font_italic {
  font-style: italic;
}

#lwhgcyvhal .gt_super {
  font-size: 65%;
}

#lwhgcyvhal .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x_tbl %&amp;gt;%
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;hodhpgkqvr&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#hodhpgkqvr .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#hodhpgkqvr .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hodhpgkqvr .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#hodhpgkqvr .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#hodhpgkqvr .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hodhpgkqvr .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hodhpgkqvr .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#hodhpgkqvr .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#hodhpgkqvr .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#hodhpgkqvr .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#hodhpgkqvr .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#hodhpgkqvr .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#hodhpgkqvr .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#hodhpgkqvr .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#hodhpgkqvr .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#hodhpgkqvr .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#hodhpgkqvr .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#hodhpgkqvr .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hodhpgkqvr .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#hodhpgkqvr .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hodhpgkqvr .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#hodhpgkqvr .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#hodhpgkqvr .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hodhpgkqvr .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hodhpgkqvr .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#hodhpgkqvr .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hodhpgkqvr .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#hodhpgkqvr .gt_left {
  text-align: left;
}

#hodhpgkqvr .gt_center {
  text-align: center;
}

#hodhpgkqvr .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#hodhpgkqvr .gt_font_normal {
  font-weight: normal;
}

#hodhpgkqvr .gt_font_bold {
  font-weight: bold;
}

#hodhpgkqvr .gt_font_italic {
  font-style: italic;
}

#hodhpgkqvr .gt_super {
  font-size: 65%;
}

#hodhpgkqvr .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Now that we have placeholders set up to handle our eventual row-wise operations, we can proceed with populating the values for the observed variables &lt;span class=&#34;math inline&#34;&gt;\(X_{i}\)&lt;/span&gt; and the residuals &lt;span class=&#34;math inline&#34;&gt;\(εi\)&lt;/span&gt; and then eventually assembling the set of observations.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; After combining the columns using &lt;code&gt;bind_cols()&lt;/code&gt; we use &lt;code&gt;slice()&lt;/code&gt; to copy the setup structure many times, making a duplicate row for each instance (set by the &lt;code&gt;each&lt;/code&gt; argument). The setup is consistent with the tidy format for data structures, where each row is an observation.&lt;/p&gt;
&lt;p&gt;After replicating the setup, we use &lt;code&gt;rowwise()&lt;/code&gt; to group by individual rows and allow our random number generation to be unique for each row. The next step is to replace the &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; values with a random number from the standard normal distribution by mutating &lt;code&gt;across&lt;/code&gt; the &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; columns.&lt;/p&gt;
&lt;p&gt;Now to the part where we try to trick the algorithm. The line &lt;code&gt;mutate(x_2 = x_1 + rnorm(n=1, mean = 0, sd = 1))&lt;/code&gt; replaces the randomly drawn &lt;span class=&#34;math inline&#34;&gt;\(X_2\)&lt;/span&gt; value from above with the exact value drawn for the one true predictor &lt;span class=&#34;math inline&#34;&gt;\(X_1\)&lt;/span&gt; plus a little noise. This is the critical step to our deception because we can see that &lt;span class=&#34;math inline&#34;&gt;\(X_2\)&lt;/span&gt; is still not involved with the data generation process since it gets multiplied to &lt;span class=&#34;math inline&#34;&gt;\(β_2\)&lt;/span&gt; (zero) before getting added into the observation. However, it will still be correlated with the true predictor &lt;span class=&#34;math inline&#34;&gt;\(X_1\)&lt;/span&gt; and also the observation &lt;span class=&#34;math inline&#34;&gt;\(Y_i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;After laying the trap, we move on to combining the &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;s and the &lt;span class=&#34;math inline&#34;&gt;\(β\)&lt;/span&gt;s before adding a residual error term through &lt;code&gt;resid = rnorm(1, mean = 0, sd = residual_sd))&lt;/code&gt;. The last step is to add up the &lt;code&gt;bx&lt;/code&gt; and &lt;code&gt;resid&lt;/code&gt; values to make the observation using &lt;code&gt;rowSums&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(08062021)

residual_sd &amp;lt;- 1 # controls effect size
number_of_obserations &amp;lt;- 100 # number of observations we want in the dataset

full_wide_tbl &amp;lt;- betas_tbl %&amp;gt;%
  bind_cols(x_tbl) %&amp;gt;%
  slice(rep(1:n(), each = number_of_obserations)) %&amp;gt;% # copy the setup once for each desired observation in the dataset
  rowwise() %&amp;gt;%
  mutate(across(x_1:x_10, ~ rnorm(1, mean = 0, sd = 1))) %&amp;gt;% # assign x values
  mutate(x_2 = x_1 + rnorm(n = 1, mean = 0, sd = 1)) %&amp;gt;% # modify X_2 to match X_1 plus some noise
  mutate(
    bx_1 = b_1 * x_1,
    bx_2 = b_2 * x_2,
    bx_3 = b_3 * x_3,
    bx_4 = b_4 * x_4,
    bx_5 = b_5 * x_5,
    bx_6 = b_6 * x_6,
    bx_7 = b_7 * x_7,
    bx_8 = b_8 * x_8,
    bx_9 = b_9 * x_9,
    bx_10 = b_10 * x_10,
    resid = rnorm(1, mean = 0, sd = residual_sd)
  ) %&amp;gt;% # add a residual noise term to each observation
  ungroup() %&amp;gt;%
  mutate(observation = rowSums(select(., matches(&amp;quot;bx|resid&amp;quot;)))) # combine the bx&amp;#39;s and the residual to make an observation for each row

full_wide_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;ovyytomvjo&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ovyytomvjo .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ovyytomvjo .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ovyytomvjo .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ovyytomvjo .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ovyytomvjo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ovyytomvjo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ovyytomvjo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ovyytomvjo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ovyytomvjo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ovyytomvjo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ovyytomvjo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ovyytomvjo .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ovyytomvjo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ovyytomvjo .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ovyytomvjo .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ovyytomvjo .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ovyytomvjo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ovyytomvjo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ovyytomvjo .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ovyytomvjo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ovyytomvjo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ovyytomvjo .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ovyytomvjo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ovyytomvjo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ovyytomvjo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ovyytomvjo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ovyytomvjo .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ovyytomvjo .gt_left {
  text-align: left;
}

#ovyytomvjo .gt_center {
  text-align: center;
}

#ovyytomvjo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ovyytomvjo .gt_font_normal {
  font-weight: normal;
}

#ovyytomvjo .gt_font_bold {
  font-weight: bold;
}

#ovyytomvjo .gt_font_italic {
  font-style: italic;
}

#ovyytomvjo .gt_super {
  font-size: 65%;
}

#ovyytomvjo .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_10&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_10&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;bx_10&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;resid&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;observation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.3395447&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6799476&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.3331312&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.02533631&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.2857135&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.2768024&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.3205689&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.3193416&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.13623157&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1504407&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.3395447&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.96925533&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.3088001&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.8526105&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.6350722&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.7195343&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.07721092&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.7417792&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.4862414&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.9801599&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.1703553&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.02182926&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.4346919&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.8526105&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.04323569&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.8958462&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-2.1833921&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-2.7169440&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.8642178&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.44676351&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.2837061&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.4657978&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.0804734&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.3062251&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.21380041&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.2091334&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-2.1833921&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.88849224&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.2948998&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.7433093&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.9123439&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.3321398&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.94530764&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.9000828&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.4433316&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.7927324&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.2250934&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.53592952&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.8170489&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.7433093&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.28102444&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.4622849&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.1853604&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.6034941&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.4372441&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.02187797&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.3158500&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.7377585&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.5419371&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.8313007&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.64240892&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.3688378&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.1853604&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.98018641&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.7948260&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..99&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;100&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.1164012&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.2047272&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.2387522&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.65005294&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.7160411&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9361878&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.2668423&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.7293151&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.24998149&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.0019955&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.1164012&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.27812099&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1617198&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Perfect. n=100 observations organized as 1 in each row, with the generative components available for examination in the other rows. Let’s see what happens if we plot the predictor variables vs. the outcome for each instance:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_wide_tbl %&amp;gt;%
  pivot_longer(cols = x_1:x_10, names_to = &amp;quot;var&amp;quot;, values_to = &amp;quot;val&amp;quot;) %&amp;gt;%
  mutate(var = as_factor(var)) %&amp;gt;%
  ggplot(aes(x = val, y = observation)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  facet_wrap(~var) +
  labs(
    title = &amp;quot;Predictor Variables Plotted Against Outcome&amp;quot;,
    subtitle = &amp;quot;x_1 is the only true predictor&amp;quot;,
    x = &amp;quot;&amp;quot;
  ) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now imagine you are the engineer who set up this experiment and you saw the above plot. The obvious thing to conclude is that both variables &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; are important in the outcome. If you were feeling really brash, you might say that that changing ‘x_1’ and/or ‘x_2’ &lt;strong&gt;cause&lt;/strong&gt; changes in &lt;code&gt;y&lt;/code&gt;. Let’s see if linear regression falls into this same trap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm(observation ~ x_1 + x_2 + x_3 + x_4 + x_5 + x_6 + x_7 + x_8 + x_9 + x_10, data = full_wide_tbl) %&amp;gt;%
  summary() %&amp;gt;%
  tidy() %&amp;gt;%
  mutate(across(is.numeric, round, 2)) %&amp;gt;%
  mutate(`significant?` = case_when(
    p.value &amp;lt;= .05 ~ &amp;quot;heck_yes&amp;quot;,
    TRUE ~ &amp;quot;nope&amp;quot;
  )) %&amp;gt;%
  gt()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;ytqvwyydoj&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ytqvwyydoj .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ytqvwyydoj .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ytqvwyydoj .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ytqvwyydoj .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ytqvwyydoj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ytqvwyydoj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ytqvwyydoj .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ytqvwyydoj .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ytqvwyydoj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ytqvwyydoj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ytqvwyydoj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ytqvwyydoj .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ytqvwyydoj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ytqvwyydoj .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ytqvwyydoj .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ytqvwyydoj .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ytqvwyydoj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ytqvwyydoj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ytqvwyydoj .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ytqvwyydoj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ytqvwyydoj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ytqvwyydoj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ytqvwyydoj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ytqvwyydoj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ytqvwyydoj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ytqvwyydoj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ytqvwyydoj .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ytqvwyydoj .gt_left {
  text-align: left;
}

#ytqvwyydoj .gt_center {
  text-align: center;
}

#ytqvwyydoj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ytqvwyydoj .gt_font_normal {
  font-weight: normal;
}

#ytqvwyydoj .gt_font_bold {
  font-weight: bold;
}

#ytqvwyydoj .gt_font_italic {
  font-style: italic;
}

#ytqvwyydoj .gt_super {
  font-size: 65%;
}

#ytqvwyydoj .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;term&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;std.error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;statistic&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p.value&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;significant?&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;(Intercept)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.15&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.10&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.42&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.16&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.04&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.14&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7.62&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.00&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;heck_yes&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.02&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.16&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.87&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.09&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.67&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.50&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.15&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.25&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.21&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.90&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.06&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.23&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.17&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.03&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;heck_yes&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.05&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.47&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.64&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_8&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.06&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.59&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.56&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_9&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.13&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.15&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.25&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;x_10&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.19&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.12&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.66&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.10&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;nope&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;This is really pretty interesting. Not only has the model seen through our trap and ignored &lt;code&gt;x_2&lt;/code&gt;, but it’s estimate of &lt;code&gt;x_1&lt;/code&gt; is quite reasonable at 1.04 (true is 1.00). Linear regression would not go report to the boss that &lt;code&gt;x_2&lt;/code&gt; causes the outcomes, or even that &lt;code&gt;x_2&lt;/code&gt; is associated with the outcome, but the naive engineer would based on the visuals! This is really nice evidence to use linear regression where some would say correlation analysis would do fine!&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But maybe this is just because we diluted the effect of &lt;code&gt;x_2&lt;/code&gt; too much. Perhaps if we just reduced the noise, then we could increase the correlation between &lt;code&gt;x_2&lt;/code&gt; and &lt;code&gt;x_1&lt;/code&gt; and cause the regression to think &lt;code&gt;x_2&lt;/code&gt; is important.&lt;/p&gt;
&lt;p&gt;First, let’s convert our pipeline into a function that takes a noise factor as an input and spits out the table of simulated observations. Then a couple more helper functions to make the facet plot and do the inference.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_fcn &amp;lt;- function(noise) {
  betas_tbl %&amp;gt;%
    bind_cols(x_tbl) %&amp;gt;%
    slice(rep(1:n(), each = number_of_obserations)) %&amp;gt;%
    rowwise() %&amp;gt;%
    mutate(across(x_1:x_10, ~ rnorm(1, mean = 0, sd = 1))) %&amp;gt;%
    mutate(x_2 = x_1 + rnorm(n = 1, mean = 0, sd = noise)) %&amp;gt;% # control the strength of the correlation between x_1 and x_2
    mutate(
      bx_1 = b_1 * x_1,
      bx_2 = b_2 * x_2,
      bx_3 = b_3 * x_3,
      bx_4 = b_4 * x_4,
      bx_5 = b_5 * x_5,
      bx_6 = b_6 * x_6,
      bx_7 = b_7 * x_7,
      bx_8 = b_8 * x_8,
      bx_9 = b_9 * x_9,
      bx_10 = b_10 * x_10,
      resid = rnorm(1, mean = 0, sd = residual_sd)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    mutate(observation = rowSums(select(., matches(&amp;quot;bx|resid&amp;quot;))))
}

plt_fcn &amp;lt;- function(tbl) {
  tbl %&amp;gt;%
    pivot_longer(cols = x_1:x_10, names_to = &amp;quot;var&amp;quot;, values_to = &amp;quot;val&amp;quot;) %&amp;gt;%
    mutate(var = as_factor(var)) %&amp;gt;%
    ggplot(aes(x = val, y = observation)) +
    geom_point() +
    geom_smooth(method = &amp;quot;lm&amp;quot;) +
    facet_wrap(~var) +
    labs(
      title = &amp;quot;Predictor Variables Plotted Against Outcome&amp;quot;,
      subtitle = &amp;quot;x_1 is the only true predictor&amp;quot;,
      x = &amp;quot;&amp;quot;
    ) +
    theme_bw()
}

inf_fcn &amp;lt;- function(tbl) {
  lm(observation ~ x_1 + x_2 + x_3 + x_4 + x_5 + x_6 + x_7 + x_8 + x_9 + x_10, data = tbl) %&amp;gt;%
    summary() %&amp;gt;%
    tidy() %&amp;gt;%
    mutate(across(is.numeric, round, 2)) %&amp;gt;%
    mutate(`significant?` = case_when(
      p.value &amp;lt;= .05 ~ &amp;quot;heck_yes&amp;quot;,
      TRUE ~ &amp;quot;nope&amp;quot;
    ))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sensitivity-to-magnitude-of-noise&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sensitivity to Magnitude of Noise&lt;/h1&gt;
&lt;p&gt;With these helpers in hand, we can look at a few different scenarios for high, medium, and low noise. Another way to view this would as low, medium, and high correlation, respectively, between the true predictor &lt;code&gt;x_1&lt;/code&gt; and the redundant &lt;code&gt;x_2&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;high-noise&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;High Noise&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1)
high_noise_tbl &amp;lt;- sim_fcn(noise = 2)

high_noise_tbl %&amp;gt;% plt_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;high_noise_tbl %&amp;gt;% inf_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 11 x 6
##    term        estimate std.error statistic p.value `significant?`
##    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;         
##  1 (Intercept)    -0.15      0.1      -1.42    0.16 nope          
##  2 x_1             0.91      0.12      7.42    0    heck_yes      
##  3 x_2             0.05      0.05      0.89    0.37 nope          
##  4 x_3            -0.03      0.1      -0.33    0.74 nope          
##  5 x_4             0.04      0.11      0.34    0.74 nope          
##  6 x_5            -0.03      0.09     -0.36    0.72 nope          
##  7 x_6            -0.01      0.11     -0.1     0.92 nope          
##  8 x_7            -0.01      0.1      -0.09    0.93 nope          
##  9 x_8            -0.03      0.1      -0.34    0.74 nope          
## 10 x_9            -0.13      0.1      -1.3     0.2  nope          
## 11 x_10            0.01      0.1       0.06    0.95 nope&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;medium-noise&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Medium Noise&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2)
med_noise_tbl &amp;lt;- sim_fcn(noise = 1)

med_noise_tbl %&amp;gt;% plt_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;med_noise_tbl %&amp;gt;% inf_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 11 x 6
##    term        estimate std.error statistic p.value `significant?`
##    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;         
##  1 (Intercept)    -0.07      0.11     -0.67    0.51 nope          
##  2 x_1             0.84      0.13      6.55    0    heck_yes      
##  3 x_2             0.12      0.1       1.15    0.25 nope          
##  4 x_3             0.07      0.09      0.7     0.48 nope          
##  5 x_4             0.19      0.11      1.72    0.09 nope          
##  6 x_5             0.06      0.1       0.59    0.56 nope          
##  7 x_6             0.02      0.1       0.21    0.83 nope          
##  8 x_7            -0.05      0.1      -0.49    0.62 nope          
##  9 x_8             0.19      0.1       1.86    0.07 nope          
## 10 x_9             0.27      0.1       2.77    0.01 heck_yes      
## 11 x_10           -0.04      0.1      -0.42    0.68 nope&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;low-noise&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Low Noise&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(3)
low_noise_tbl &amp;lt;- sim_fcn(noise = .1)

low_noise_tbl %&amp;gt;% plt_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#low_noise_tbl %&amp;gt;% inf_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even in the low noise (large correlation) condition, the model isn’t tempted to see &lt;code&gt;x_2&lt;/code&gt; as important. So is there any cost to pay for leaving all correlated variables in the model? The astute observer might point out that the std. error of the estimate for &lt;span class=&#34;math inline&#34;&gt;\(β_1\)&lt;/span&gt; seems to trend upwards when the noise is low. Does this mean we are more uncertain about the estimate of the true predictor &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; when it is correlated with another predictor like &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;? Or was that just due to chance and the nature of the random draws in the simulation? After all, we only built 1 model for each scenario.&lt;/p&gt;
&lt;p&gt;To explore this further we need a bigger experiment - or set of experiments - that looks at a range of correlation strengths between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; and repeats each setting many times. This will also provide a nice opportunity to practice with nested lists, a workflow that is challenging (for me) but also elegant and powerful. Here’s how we could go about it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up a preliminary tibble as before that has columns for the betas and the x’s&lt;/li&gt;
&lt;li&gt;Set up a separate tibble with a list of the desired “noise”; this value is effectively the strength of the correlation between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt;. When noise is 0, the two variables are perfectly correlated.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;crossing()&lt;/code&gt; to generate all combinations of noise with the beta’s and x’s&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;set-up-the-simulation-parameters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Set up the simulation parameters&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prelim_tbl &amp;lt;- betas_tbl %&amp;gt;%
  bind_cols(x_tbl)

error_se_tbl &amp;lt;- tibble(
  error_sd = seq(from = 0.01, to = 3.01, by = .05)
)

setup_tbl &amp;lt;- prelim_tbl %&amp;gt;%
  crossing(error_se_tbl) %&amp;gt;%
  mutate(row_id = row_number()) %&amp;gt;%
  select(row_id, error_sd, everything())

setup_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;qjmwdhgwfu&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#qjmwdhgwfu .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qjmwdhgwfu .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qjmwdhgwfu .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qjmwdhgwfu .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qjmwdhgwfu .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qjmwdhgwfu .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qjmwdhgwfu .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qjmwdhgwfu .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qjmwdhgwfu .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qjmwdhgwfu .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qjmwdhgwfu .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qjmwdhgwfu .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#qjmwdhgwfu .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qjmwdhgwfu .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#qjmwdhgwfu .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#qjmwdhgwfu .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qjmwdhgwfu .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#qjmwdhgwfu .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qjmwdhgwfu .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#qjmwdhgwfu .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qjmwdhgwfu .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qjmwdhgwfu .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qjmwdhgwfu .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qjmwdhgwfu .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qjmwdhgwfu .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#qjmwdhgwfu .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qjmwdhgwfu .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#qjmwdhgwfu .gt_left {
  text-align: left;
}

#qjmwdhgwfu .gt_center {
  text-align: center;
}

#qjmwdhgwfu .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qjmwdhgwfu .gt_font_normal {
  font-weight: normal;
}

#qjmwdhgwfu .gt_font_bold {
  font-weight: bold;
}

#qjmwdhgwfu .gt_font_italic {
  font-style: italic;
}

#qjmwdhgwfu .gt_super {
  font-size: 65%;
}

#qjmwdhgwfu .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;row_id&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;error_sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;b_10&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_1&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_2&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_3&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_4&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_6&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_7&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_8&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_9&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x_10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.06&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.16&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.21&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..60&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;61&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;61&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;make-function-to-generate-observations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Make Function to Generate Observations&lt;/h2&gt;
&lt;p&gt;Now we need a function that can look at each row in the &lt;code&gt;setup_tbl&lt;/code&gt; and simulate many observations based on those setup parameters. This is basically the same thing that we did before with &lt;code&gt;slice()&lt;/code&gt;, only now the noise variable &lt;code&gt;error_sd&lt;/code&gt; can vary (which changes the correlation strength between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gen_observations_fcn &amp;lt;- function(sd_row_number = 1, reps = 100) {
  setup_tbl %&amp;gt;%
    mutate(n_row = row_number()) %&amp;gt;%
    filter(n_row == sd_row_number) %&amp;gt;%
    slice(rep(1:n(), each = reps)) %&amp;gt;%
    mutate(n_row = row_number()) %&amp;gt;%
    group_by(n_row) %&amp;gt;%
    mutate(across(x_1:x_10, ~ rnorm(1, mean = 0, sd = 1))) %&amp;gt;%
    mutate(x_2 = x_1 + rnorm(n = 1, mean = 0, sd = error_sd)) %&amp;gt;% # control the strength of the correlation between x_1 and x_2
    mutate(
      bx_1 = b_1 * x_1,
      bx_2 = b_2 * x_2,
      bx_3 = b_3 * x_3,
      bx_4 = b_4 * x_4,
      bx_5 = b_5 * x_5,
      bx_6 = b_6 * x_6,
      bx_7 = b_7 * x_7,
      bx_8 = b_8 * x_8,
      bx_9 = b_9 * x_9,
      bx_10 = b_10 * x_10,
      resid = rnorm(1, mean = 0, sd = 1)
    ) %&amp;gt;%
    ungroup()
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;use-the-function-in-a-loop-to-repeat-the-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Use the Function in a Loop to Repeat the Simulation&lt;/h2&gt;
&lt;p&gt;Sincere apologies to the for-loop haters but I don’t currently know a more elegant way to do this part. First we establish the number of simulations we want - in this case 100 at each noise level will do fine. We then initialize a holder tibble; the data inside this one isn’t important but we want the column names to match what comes out of the simulation loop so that we can &lt;code&gt;bind_rows&lt;/code&gt; to build out the superset of simulation data. The final step is to loop the simulation 100 times, generating 100 synthetic observations at a specified correlation each time through. Inside the loop, after the 100 observations are generated at each condition, the model is built and the coefficients, standard error, and p-values for coefficients are extracted and stored. When all is done, for every strength of correlation we should have 100 estimates based on 100 models of 100 data points generated under those specified conditions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_sims &amp;lt;- 100

# original_tbl &amp;lt;- tidy(summary(lm(observation ~ ., data = full_wide_tbl))) %&amp;gt;%
#   filter(term == &amp;quot;(Intercept)&amp;quot;)

# for (i in 1:n_sims) {
#   unnested_mods_tbl &amp;lt;- setup_tbl %&amp;gt;%
#     rowwise() %&amp;gt;%
#     mutate(observations_tbl = map(row_id, ~ gen_observations_fcn(.x, reps = 100))) %&amp;gt;%
#     ungroup() %&amp;gt;%
#     select(observations_tbl) %&amp;gt;%
#     unnest() %&amp;gt;%
#     mutate(observation = rowSums(select(., matches(&amp;quot;bx|resid&amp;quot;)))) %&amp;gt;%
#     group_by(error_sd) %&amp;gt;%
#     nest() %&amp;gt;%
#     mutate(model = map(data, function(data) tidy(summary(lm(observation ~ x_1 + x_2 + x_3 + x_4 + x_5 + x_6 + x_7 + x_8 + x_9 + x_10, data = data))))) %&amp;gt;%
#     select(-data) %&amp;gt;%
#     unnest(model) %&amp;gt;%
#     filter(term == &amp;quot;x_1&amp;quot; | term == &amp;quot;x_2&amp;quot;)
#
#   original_tbl &amp;lt;- original_tbl %&amp;gt;%
#     bind_rows(unnested_mods_tbl)
#
# }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here’s what the output looks like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cln_sim_tbl &amp;lt;- original_tbl %&amp;gt;%
  filter(term != &amp;quot;(Intercept)&amp;quot;) %&amp;gt;%
  select(error_sd, everything())

cln_sim_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;zrfeerulyf&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#zrfeerulyf .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zrfeerulyf .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zrfeerulyf .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zrfeerulyf .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zrfeerulyf .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zrfeerulyf .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zrfeerulyf .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zrfeerulyf .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zrfeerulyf .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zrfeerulyf .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zrfeerulyf .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zrfeerulyf .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#zrfeerulyf .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zrfeerulyf .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#zrfeerulyf .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#zrfeerulyf .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zrfeerulyf .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#zrfeerulyf .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zrfeerulyf .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#zrfeerulyf .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zrfeerulyf .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zrfeerulyf .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zrfeerulyf .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zrfeerulyf .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zrfeerulyf .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#zrfeerulyf .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zrfeerulyf .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#zrfeerulyf .gt_left {
  text-align: left;
}

#zrfeerulyf .gt_center {
  text-align: center;
}

#zrfeerulyf .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zrfeerulyf .gt_font_normal {
  font-weight: normal;
}

#zrfeerulyf .gt_font_bold {
  font-weight: bold;
}

#zrfeerulyf .gt_font_italic {
  font-style: italic;
}

#zrfeerulyf .gt_super {
  font-size: 65%;
}

#zrfeerulyf .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;error_sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;term&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;std.error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;statistic&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p.value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7.96513254&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;12.8959803&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6176446&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.53838682&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-7.14281172&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;12.9118544&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.5531980&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.58151483&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.06&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.31952029&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.6226721&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.0457124&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.04373651&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.06&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-2.34648487&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.6284278&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-1.4409511&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.15310755&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.11&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.17504497&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.8655740&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;-0.2022299&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.84019853&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..12199&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;12200&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;x_2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01955293&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0411947&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.4746467&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.63620143&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Now we can visualize what happens to the coefficient estimates, their standard errors, and the p-values as the correlation between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; changes in strength. First, let’s look at the estimates for the coefficients.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cln_sim_tbl %&amp;gt;%
  ggplot(aes(x = estimate, y = error_sd)) +
  geom_jitter(aes(color = term), alpha = .4, height = .05) +
  xlim(c(-4, 4)) +
  geom_vline(xintercept = 1, linetype = 2) +
  geom_vline(xintercept = 0, linetype = 2) +
  coord_flip() +
  theme_bw() +
  scale_color_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  theme(legend.title = element_blank()) +
  labs(
    y = &amp;quot;SD of Random Noise in Relationship Between x_1 and x_2&amp;quot;,
    x = &amp;quot;Estimate of Beta Coefficient&amp;quot;,
    title = &amp;quot;Variable Correlation Strength vs. Coefficient Estimates&amp;quot;,
    subtitle = &amp;quot;True Values are x_1 = 1, x_2 = 0&amp;quot;,
    caption = &amp;quot;Lower Noise is Higher Correlation&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The above plot shows that we can indeed trick the model. When the correlation is high enough, the spread of the coefficient estimates get very wide. Even though on average the estimate is still correct, the model is very uncertain about the value for any particular experiment and will occasionally think that &lt;code&gt;x_2&lt;/code&gt; has a large estimated coefficient. And we usually only get to run 1 experiment in real life.&lt;/p&gt;
&lt;p&gt;Based on these data, we should expect to see the standard error of the estimate to grow large at high correlation. Let’s see if that’s true:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cln_sim_tbl %&amp;gt;%
  #  mutate(error_sd = as_factor(error_sd)) %&amp;gt;%
  ggplot(aes(x = std.error, y = error_sd)) +
  geom_jitter(aes(color = term), alpha = .4, height = .05) +
  xlim(c(0, 1.2)) +
  coord_flip() +
  theme_bw() +
  scale_color_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  theme(legend.title = element_blank()) +
  labs(
    y = &amp;quot;SD of Random Noise in Relationship Between x_1 and x_2&amp;quot;,
    x = &amp;quot;Standard Error of Coefficient Estimate&amp;quot;,
    title = &amp;quot;Variable Correlation Strength vs. Standard Error of Coefficient Estimates&amp;quot;,
    caption = &amp;quot;Lower Noise is Higher Correlation&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Just as expected - the uncertainty in the estimates spikes as the correlation between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; approaches 1. But what happens to the p-values of the coefficients for each variable?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cln_sim_tbl %&amp;gt;%
  #  mutate(error_sd = as_factor(error_sd)) %&amp;gt;%
  ggplot(aes(x = p.value, y = error_sd)) +
  geom_jitter(aes(color = term), alpha = .5, height = .05) +
  geom_vline(xintercept = .05, linetype = 2, size = 1.3, alpha = .7) +
  coord_flip() +
  theme_bw() +
  scale_color_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  theme(legend.title = element_blank()) +
  labs(
    y = &amp;quot;SD of Random Noise in Relationship Between x_1 and x_2&amp;quot;,
    x = &amp;quot;P-Value for Coefficient Estimate&amp;quot;,
    title = &amp;quot;Variable Correlation Strength vs. P-Values for Coefficient Estimates&amp;quot;,
    subtitle = &amp;quot;dotted line shows p = .05&amp;quot;,
    caption = &amp;quot;Lower Noise is Higher Correlation&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Yep - as noise goes to 0 and the correlation approaches 1, the p-values get very unstable and the true effect of &lt;code&gt;x_1&lt;/code&gt; can no longer be detected consistent relative to the null. But the good news is that as long as the correlation isn’t close to perfect, the model does its job quite well and the p-values for a true effect dive near 0.&lt;/p&gt;
&lt;p&gt;Just to drive the point home, we could look at the actual correlation coefficients between &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; at the point that things start to go unstable. From the above plot, it looks like the model starts to get confused at the time the the noise is around 0.6. We can use our helper function from before to quickly make a single dataset at that noise level and then evaluate the correlation of &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; in that set:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unstable_tbl &amp;lt;- sim_fcn(noise = 0.6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here’s the correlation plot. We see that in this case, a correlation of around 0.8 is where things start to go unstable with the estimates.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unstable_tbl %&amp;gt;% 
  select(x_1:x_10) %&amp;gt;%
  ggcorr(
  high = &amp;quot;red&amp;quot;,
  low = &amp;quot;blue&amp;quot;,
  label = TRUE,
  hjust = .75,
  size = 3,
  label_size = 3,
  nbreaks = 4
) +
  labs(
    title = &amp;quot;Correlation Matrix&amp;quot;,
    subtitle = &amp;quot;Pearson Method Using Pairwise Obervations&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here’s the variables plotted against the observation for the above scenario, with &lt;code&gt;x_1&lt;/code&gt; and &lt;code&gt;x_2&lt;/code&gt; correlated with each other at a 0.8 level.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unstable_tbl %&amp;gt;% plt_fcn()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-04-linear-regression-is-smarter-than-i-thought-estimating-effect-sizes-for-variables-in-r_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the end, we found out that we can trick the linear regression model, just not in the way we expected. We were never really able to get the model to think that &lt;code&gt;x_2&lt;/code&gt; was important but we were able to make it uncertain about &lt;code&gt;x_1&lt;/code&gt;. The average coefficient estimate remains stable even in the presence of highly correlated predictors, but it’s the &lt;strong&gt;uncertainty&lt;/strong&gt; about the estimates that pays the price for correlated variables. So should we just leave them all in? Like most things in statistics - it depends on the purpose of the model!&lt;/p&gt;
&lt;p&gt;Thank you for following along with this post if you’ve made it this far. If you prefer learning concepts from mathematical principles rather than simulation, please refer to &lt;a href=&#34;https://stats.stackexchange.com/a/366579/31189&#34;&gt;this response on Cross Validated&lt;/a&gt; for some explanation of the the bahavior we just saw. You could check out &lt;a href=&#34;https://www.google.com/search?q=variance+inflation+factor&amp;amp;rlz=1C1GCEA_enUS819US819&amp;amp;oq=variance+inflation+factor&amp;amp;aqs=chrome..69i57j0i512l9.3656j0j15&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;variance inflation factor&lt;/a&gt; which is the same idea presented a different way.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;session-info&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Session Info&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 4.0.3 (2020-10-10)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 18363)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] GGally_2.0.0    gt_0.2.2        broom_0.7.8     here_1.0.0     
##  [5] forcats_0.5.0   stringr_1.4.0   dplyr_1.0.7     purrr_0.3.4    
##  [9] readr_1.4.0     tidyr_1.1.3     tibble_3.1.4    ggplot2_3.3.5  
## [13] tidyverse_1.3.0
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_1.0.7         lattice_0.20-41    lubridate_1.7.9.2  assertthat_0.2.1  
##  [5] rprojroot_2.0.2    digest_0.6.28      utf8_1.2.2         plyr_1.8.6        
##  [9] R6_2.5.1           cellranger_1.1.0   backports_1.2.0    reprex_0.3.0      
## [13] evaluate_0.14      highr_0.9          httr_1.4.2         blogdown_0.15     
## [17] pillar_1.6.2       rlang_0.4.11       readxl_1.3.1       rstudioapi_0.13   
## [21] jquerylib_0.1.4    Matrix_1.2-18      checkmate_2.0.0    rmarkdown_2.11    
## [25] labeling_0.4.2     splines_4.0.3      munsell_0.5.0      compiler_4.0.3    
## [29] modelr_0.1.8       xfun_0.26          pkgconfig_2.0.3    mgcv_1.8-33       
## [33] htmltools_0.5.2    tidyselect_1.1.1   bookdown_0.21      reshape_0.8.8     
## [37] fansi_0.5.0        crayon_1.4.1       dbplyr_2.0.0       withr_2.4.2       
## [41] grid_4.0.3         nlme_3.1-150       jsonlite_1.7.2     gtable_0.3.0      
## [45] lifecycle_1.0.1    DBI_1.1.0          magrittr_2.0.1     scales_1.1.1      
## [49] cli_3.0.1          stringi_1.7.4      farver_2.1.0       fs_1.5.0          
## [53] xml2_1.3.2         bslib_0.3.0        ellipsis_0.3.2     generics_0.1.0    
## [57] vctrs_0.3.8        RColorBrewer_1.1-2 tools_4.0.3        glue_1.4.2        
## [61] hms_0.5.3          fastmap_1.1.0      yaml_2.2.1         colorspace_2.0-2  
## [65] rvest_0.3.6        knitr_1.34         haven_2.3.1        sass_0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;This is a straight copy-paste job from the mathy explanation on Wikipedia here: &lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_regression#Simple_and_multiple_linear_regression&#34; class=&#34;uri&#34;&gt;https://en.wikipedia.org/wiki/Linear_regression#Simple_and_multiple_linear_regression&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Note that this structure for the simulation is perhaps a bit verbose and potentially not optimized for speed, but given that the purpose is to explore and understand, I prefer to make things more readable and easily observed at the expense of speed and length&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;On a side note, we see that just by chance &lt;code&gt;x_6&lt;/code&gt; was flagged as statistically significant. This would be expected to happen 1 out of 20 times and should be another consideration when selecting variables for a model, but isn’t the main point of this post so we’ll set that aside for now.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Frequentist and Bayesian Tolerance Intervals in R</title>
      <link>/post/exploring-frequentist-and-bayesian-tolerance-intervals-in-r/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/exploring-frequentist-and-bayesian-tolerance-intervals-in-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Tolerance intervals are used to specify coverage of a population of data. In the frequentist framework, the width of the interval is dependent on the desired coverage proportion and the specified confidence level. They are widely used in the medical device industry because they can be compared directly vs. product specifications, allowing the engineer to make a judgment about what percentage of the parts would meet the spec taking into account sampling uncertainty.&lt;/p&gt;
&lt;p&gt;In this post I wanted to dive a bit deeper into the frequentist version of tolerance intervals to verify that they provide the correct coverage in a straight-forward use case. Then I will explore a Bayesian version which uses the posterior draws from a fitted model to calculate the Bayesian analogue of a tolerance interval.&lt;/p&gt;
&lt;div id=&#34;libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(here)
library(brms)
library(broom)
library(tidybayes)
library(tolerance)
library(wesanderson)
library(patchwork)
library(gt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with any frequentist simulation looking at coverage of a p-value, we can start with the population parameters known. From there we simulate many draws from that population and calculate the desired statistic (in this case the tolerance interval limits). By comparing each calculated tolerance interval to the true population coverage, we can determine the number of simulations that do not meet the specified coverage. If that number, as a fraction of the total number of sims, is less than or equal to the p-value, then the tolerance interval procedure is working as intended and provided the specified coverage, on average, over many simulated experiments.&lt;/p&gt;
&lt;p&gt;This block sets up the parameters and identifies the specified quantiles of the true population.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;simulated-experiments&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Simulated Experiments&lt;/h1&gt;
&lt;div id=&#34;true-population-parameters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;True Population Parameters&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(9989)

n_sims &amp;lt;- 10000
true_population_mean &amp;lt;- 40
true_population_sd &amp;lt;- 4
alpha &amp;lt;- 0.1
p &amp;lt;- .95

upper_97.5 &amp;lt;- qnorm(p = .975, mean = true_population_mean, sd = true_population_sd)
lower_02.5 &amp;lt;- qnorm(p = .025, mean = true_population_mean, sd = true_population_sd)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now run the simulation, replicating many “experiments” of n=15, calculating a 90% confidence, 2-sided tolerance interval for 95% of the population each time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;run-the-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Run the Simulation&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_summary_tbl &amp;lt;- tibble(sim_id = seq(from = 1, to = n_sims, by = 1)) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(
    test_sample_size = 15,
    sim_test_data = list(rnorm(n = test_sample_size, mean = true_population_mean, sd = true_population_sd))
  ) %&amp;gt;%
  summarize(
    sim_id = sim_id,
    #   sim_test_data = sim_test_data,
    norm_tol = list(normtol.int(sim_test_data, alpha = alpha, P = p, side = 2)),
    sample_sd = sd(sim_test_data)
  ) %&amp;gt;%
  unnest(norm_tol) %&amp;gt;%
  rename(
    lower_bound_ltl = &amp;quot;2-sided.lower&amp;quot;,
    upper_bound_utl = &amp;quot;2-sided.upper&amp;quot;,
    sample_mean = x.bar,
    p = P
  ) %&amp;gt;%
  ungroup() %&amp;gt;%
  select(sim_id, alpha, p, sample_mean, sample_sd, everything()) %&amp;gt;%
  mutate(
    true_lower_2.5 = lower_02.5,
    true_upper_97.5 = upper_97.5
  )

sim_summary_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;moscublyzf&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#moscublyzf .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#moscublyzf .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#moscublyzf .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#moscublyzf .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#moscublyzf .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#moscublyzf .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#moscublyzf .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#moscublyzf .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#moscublyzf .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#moscublyzf .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#moscublyzf .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#moscublyzf .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#moscublyzf .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#moscublyzf .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#moscublyzf .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#moscublyzf .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#moscublyzf .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#moscublyzf .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#moscublyzf .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#moscublyzf .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#moscublyzf .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#moscublyzf .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#moscublyzf .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#moscublyzf .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#moscublyzf .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#moscublyzf .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#moscublyzf .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#moscublyzf .gt_left {
  text-align: left;
}

#moscublyzf .gt_center {
  text-align: center;
}

#moscublyzf .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#moscublyzf .gt_font_normal {
  font-weight: normal;
}

#moscublyzf .gt_font_bold {
  font-weight: bold;
}

#moscublyzf .gt_font_italic {
  font-style: italic;
}

#moscublyzf .gt_super {
  font-size: 65%;
}

#moscublyzf .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sim_id&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;alpha&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sample_mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sample_sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;lower_bound_ltl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;upper_bound_utl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;true_lower_2.5&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;true_upper_97.5&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;36.19320&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.243531&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;27.35493&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;45.03147&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.56155&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.766514&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;30.29821&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;50.82489&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.23154&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.268292&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;28.60091&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.86217&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.24057&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.175918&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;28.86165&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.61949&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.41020&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.880094&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;29.83737&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;50.98303&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..9999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;10000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;10000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;38.69646&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.780010&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;25.67145&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.72147&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;32.16014&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;47.83986&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualize&lt;/h2&gt;
&lt;p&gt;Plot the resulting upper and lower bounds of the 90/95 tolerance interval. The red lines are the true population quantiles.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_summary_tbl %&amp;gt;%
  pivot_longer(cols = everything(), names_to = &amp;quot;param&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;%
  filter(param == &amp;quot;lower_bound_ltl&amp;quot; | param == &amp;quot;upper_bound_utl&amp;quot;) %&amp;gt;%
  mutate(param = as_factor(param)) %&amp;gt;%
  ggplot(aes(x = value, y = param)) +
  geom_jitter(aes(color = param), width = .1, height = .1, size = .3, alpha = .05) +
  stat_halfeye(aes(fill = param), alpha = .7, position = position_nudge(y = .2)) +
  geom_vline(xintercept = mean(sim_summary_tbl$true_lower_2.5), color = &amp;quot;firebrick&amp;quot;, linetype = 2) +
  geom_vline(xintercept = mean(sim_summary_tbl$true_upper_97.5), color = &amp;quot;firebrick&amp;quot;, linetype = 2) +
  scale_color_manual(values = wes_palette(&amp;quot;Moonrise2&amp;quot;)) +
  scale_fill_manual(values = wes_palette(&amp;quot;Moonrise2&amp;quot;)) +
  #  scale_color_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  #  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  labs(
    x = &amp;quot;&amp;quot;,
    y = &amp;quot;&amp;quot;,
    title = &amp;quot;Distribution of Calculated Upper and Lower Tolerance Limits&amp;quot;,
    subtitle = &amp;quot;10,000 Simulations of n=15 parts with 2-sided normal Tolerance Intervals&amp;quot;,
    caption = &amp;quot;pink vertical lines represent true population quantiles, .025 and .975&amp;quot;
  ) +
  theme(
    legend.title = element_blank(),
    legend.position = &amp;quot;bottom&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-06-22-exploring-frequentist-and-bayesian-tolerance-intervals-in-r_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To see if the tolerance interval procedure is providing the desired coverage, we have to look at each set of lower and upper limits from each simulation. The code below converts the calculated tolerance bounds from each sim into quantiles of the true population, then calculates the difference to determine the true population coverage of the simulated experiment. If the coverage is less than intended, a flag of 1 is assigned in the “unacceptable_coverage” col, else 0.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-true-coverage-of-each-simulated-experiment&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Evaluate True Coverage of Each Simulated Experiment&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coverage_summary_tbl &amp;lt;- sim_summary_tbl %&amp;gt;%
  mutate(
    ltl_coverage_true = map_dbl(lower_bound_ltl, pnorm, true_population_mean, true_population_sd),
    utl_coverage_true = map_dbl(upper_bound_utl, pnorm, true_population_mean, true_population_sd)
  ) %&amp;gt;%
  mutate(total_tl_coverage_true = utl_coverage_true - ltl_coverage_true) %&amp;gt;%
  mutate(unacceptable_coverage = case_when(
    total_tl_coverage_true &amp;gt;= p ~ 0,
    TRUE ~ 1
  )) %&amp;gt;%
  select(-c(alpha, p, true_lower_2.5, true_upper_97.5))

coverage_summary_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;ixrqpuauby&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ixrqpuauby .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ixrqpuauby .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ixrqpuauby .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ixrqpuauby .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ixrqpuauby .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ixrqpuauby .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ixrqpuauby .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ixrqpuauby .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ixrqpuauby .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ixrqpuauby .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ixrqpuauby .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ixrqpuauby .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ixrqpuauby .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ixrqpuauby .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ixrqpuauby .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ixrqpuauby .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ixrqpuauby .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ixrqpuauby .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ixrqpuauby .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ixrqpuauby .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ixrqpuauby .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ixrqpuauby .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ixrqpuauby .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ixrqpuauby .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ixrqpuauby .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ixrqpuauby .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ixrqpuauby .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ixrqpuauby .gt_left {
  text-align: left;
}

#ixrqpuauby .gt_center {
  text-align: center;
}

#ixrqpuauby .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ixrqpuauby .gt_font_normal {
  font-weight: normal;
}

#ixrqpuauby .gt_font_bold {
  font-weight: bold;
}

#ixrqpuauby .gt_font_italic {
  font-style: italic;
}

#ixrqpuauby .gt_super {
  font-size: 65%;
}

#ixrqpuauby .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sim_id&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sample_mean&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sample_sd&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;lower_bound_ltl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;upper_bound_utl&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;ltl_coverage_true&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;utl_coverage_true&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;total_tl_coverage_true&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;unacceptable_coverage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;36.19320&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.243531&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;27.35493&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;45.03147&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0007854236&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.8957802&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.8949948&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.56155&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.766514&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;30.29821&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;50.82489&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0076447723&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9965973&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9889526&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.23154&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.268292&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;28.60091&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.86217&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0021875221&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9984893&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9963017&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.24057&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.175918&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;28.86165&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.61949&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0026797862&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9981630&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9954832&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40.41020&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.880094&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;29.83737&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;50.98303&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0055321969&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9969814&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9914492&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..9999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;10000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;10000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;38.69646&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4.780010&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;25.67145&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;51.72147&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0001703976&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9983072&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.9981368&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;count-false-positives&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Count False Positives&lt;/h2&gt;
&lt;p&gt;For the coverage to be correct, the percentage of false positives (simulated experiments that covered less than p% of the true population) should be less than or equal to alpha (10%). That would mean less than .1(10000) = 1000 cases where the tolerance interval covered less than 95% of the true population.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coverage_summary_tbl %&amp;gt;%
  summarize(
    false_positives = sum(unacceptable_coverage),
    false_positive_limit = alpha * n_sims
  ) %&amp;gt;%
  mutate(
    alpha_level = alpha,
    total_trials = n_sims,
    false_positive_rate = false_positives / n_sims,
    &amp;quot;tol_limit_procedure_working?&amp;quot; = case_when(
      false_positives &amp;lt; false_positive_limit ~ &amp;quot;heck_yes&amp;quot;,
      TRUE ~ &amp;quot;boo&amp;quot;
    )
  ) %&amp;gt;%
  select(total_trials, alpha_level, false_positive_limit, everything()) %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;hblnhaayca&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#hblnhaayca .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#hblnhaayca .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hblnhaayca .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#hblnhaayca .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#hblnhaayca .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hblnhaayca .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hblnhaayca .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#hblnhaayca .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#hblnhaayca .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#hblnhaayca .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#hblnhaayca .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#hblnhaayca .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#hblnhaayca .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#hblnhaayca .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#hblnhaayca .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#hblnhaayca .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#hblnhaayca .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#hblnhaayca .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hblnhaayca .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#hblnhaayca .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hblnhaayca .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#hblnhaayca .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#hblnhaayca .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hblnhaayca .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hblnhaayca .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#hblnhaayca .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hblnhaayca .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#hblnhaayca .gt_left {
  text-align: left;
}

#hblnhaayca .gt_center {
  text-align: center;
}

#hblnhaayca .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#hblnhaayca .gt_font_normal {
  font-weight: normal;
}

#hblnhaayca .gt_font_bold {
  font-weight: bold;
}

#hblnhaayca .gt_font_italic {
  font-style: italic;
}

#hblnhaayca .gt_super {
  font-size: 65%;
}

#hblnhaayca .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;total_trials&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;alpha_level&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;false_positive_limit&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;false_positives&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;false_positive_rate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;tol_limit_procedure_working?&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;10000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;958&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.0958&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;heck_yes&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Because .0958 is less than .1 (10%) we can say that the tolerance interval procedure is capturing the desired population proportion (95%) with an acceptable false positive rate (&amp;lt;= 10%). Neat!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian-2-sided-tolerance-interval&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Bayesian 2-sided Tolerance Interval&lt;/h1&gt;
&lt;p&gt;Now let’s look at the Bayesian approach. Note that this is completely different example from above, not a continuation. The desired coverage for this case is a little bit different - 95%, and we’ll aim for a 90% confidence level (for the frequentist version that comes later) and we’ll try to capture the 90% most credible estimates for the Bayesian version.&lt;/p&gt;
&lt;div id=&#34;load-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load the Data&lt;/h2&gt;
&lt;p&gt;The dataset and example used for this section is adapted from &lt;a href=&#34;https://nvlpubs.nist.gov/nistpubs/jres/126/jres.126.004.pdf&#34;&gt;this excellent paper on coverage intervals&lt;/a&gt;.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; The values represent measurements of mass fraction of iron made by the National Institute of Standards and Technology (NIST). Units of measurement are percentages, or cg/g.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;w_tbl &amp;lt;- tibble(w = c(
  67.43, 66.97, 67.65, 66.84, 67.05, 66.57, 67.16, 68.3,
  67.01, 67.07, 67.23, 66.51, 66.46, 67.54, 67.09, 66.77
)) %&amp;gt;%
  mutate(w_pct = w / 100)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In preparation for the Bayesian tolerance interval calculations we should run some prior predictive checks. I know Beta(1,1) is a flat prior on mu, but I am not experienced enough with the cauchy to mentally visualize what its parameters mean with respect to the outcome variable. I adjusted the scale parameter for sigma manually and did this visual check each time until I saw a nice cloud of curves of varying but reasonable widths at scale = .025. Bonus - it is so satisfying to make the code for these curves using map2 and dplyr in the prep and then ggplot for the vis - incredibly smooth, readable, and efficient. I remain grateful for these core packages, especially as I start to mess around with other languages.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prior-predictive-simulations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prior Predictive Simulations&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2005)

prior_pred_tbl &amp;lt;- tibble(
  mu = rbeta(300, 1, 1),
  sig = rcauchy(300, 0, 0.025) %&amp;gt;% abs()
) %&amp;gt;%
  mutate(row_id = row_number()) %&amp;gt;%
  select(row_id, everything()) %&amp;gt;%
  mutate(plotted_y_data = map2(mu, sig, ~ tibble(
    x = seq(0, 1, length.out = 100),
    y = dnorm(x, .x, .y)
  ))) %&amp;gt;%
  unnest() %&amp;gt;%
  mutate(model = &amp;quot;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&amp;quot;)

prior_pred_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;spvhicbjem&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#spvhicbjem .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#spvhicbjem .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#spvhicbjem .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#spvhicbjem .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#spvhicbjem .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#spvhicbjem .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#spvhicbjem .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#spvhicbjem .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#spvhicbjem .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#spvhicbjem .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#spvhicbjem .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#spvhicbjem .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#spvhicbjem .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#spvhicbjem .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#spvhicbjem .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#spvhicbjem .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#spvhicbjem .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#spvhicbjem .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#spvhicbjem .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#spvhicbjem .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#spvhicbjem .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#spvhicbjem .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#spvhicbjem .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#spvhicbjem .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#spvhicbjem .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#spvhicbjem .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#spvhicbjem .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#spvhicbjem .gt_left {
  text-align: left;
}

#spvhicbjem .gt_center {
  text-align: center;
}

#spvhicbjem .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#spvhicbjem .gt_font_normal {
  font-weight: normal;
}

#spvhicbjem .gt_font_bold {
  font-weight: bold;
}

#spvhicbjem .gt_font_italic {
  font-style: italic;
}

#spvhicbjem .gt_super {
  font-size: 65%;
}

#spvhicbjem .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;row_id&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mu&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sig&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;x&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;y&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;model&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1675134&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.18178615&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.00000000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.823131e-01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1675134&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.18178615&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01010101&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.823759e-01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1675134&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.18178615&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.02020202&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.824349e-01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1675134&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.18178615&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.03030303&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.824900e-01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.1675134&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.18178615&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.04040404&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.825412e-01&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..29999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;30000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;300&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.5856645&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.01596839&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.00000000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.589627e-145&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;mu ~ beta(1,1), sigma ~ cauchy(0,0.025)&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;j &amp;lt;- prior_pred_tbl %&amp;gt;%
  ggplot(aes(x = x, y = y, group = row_id)) +
  geom_line(aes(x, y), alpha = .5, color = &amp;quot;#2c3e50&amp;quot;) +
  labs(
    x = &amp;quot;x&amp;quot;,
    y = &amp;quot;dnorm(x)&amp;quot;
  ) +
  ylim(c(0, 10)) +
  theme_minimal()

k &amp;lt;- j +
  ylim(c(0, 50))

(k + j) + plot_annotation(
  title = &amp;quot;Prior Predictions: n=300 Possible Distibutions According to Priors:&amp;quot;,
  subtitle = &amp;quot;mu ~ Beta(1,1), sigma ~ cauchy(0, .025)&amp;quot;,
  caption = &amp;quot;same data, 2 different y-axis scales&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-06-22-exploring-frequentist-and-bayesian-tolerance-intervals-in-r_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-the-model-with-brms&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fit the model with brms&lt;/h2&gt;
&lt;p&gt;Use the priors that were just identified to fit a model in brms and visualize the output. The fuzzy caterpillar is not plotted because its very slow with to render with so many iterations. Don’t worry - it’s fuzzy.&lt;/p&gt;
&lt;div id=&#34;non-informative-priors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Non-Informative Priors&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;w_mod &amp;lt;-
  brm(
    data = w_tbl, family = gaussian(),
    w_pct ~ 1,
    prior = c(
      prior(beta(1, 1), class = Intercept),
      prior(cauchy(0, .025), class = sigma)
    ),
    iter = 400000, warmup = 50000, chains = 4, cores = 2,
    seed = 10
  )


w_mod %&amp;gt;% summary()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Family: gaussian 
##   Links: mu = identity; sigma = identity 
## Formula: w_pct ~ 1 
##    Data: w_tbl (Number of observations: 16) 
## Samples: 4 chains, each with iter = 4e+05; warmup = 50000; thin = 1;
##          total post-warmup samples = 1400000
## 
## Population-Level Effects: 
##           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## Intercept     0.67      0.00     0.67     0.67 1.00   858299   757467
## 
## Family Specific Parameters: 
##       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## sigma     0.01      0.00     0.00     0.01 1.00   792388   740061
## 
## Samples were drawn using sampling(NUTS). For each parameter, Bulk_ESS
## and Tail_ESS are effective sample size measures, and Rhat is the potential
## scale reduction factor on split chains (at convergence, Rhat = 1).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Peek at the posterior tbl for mu and sigma.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;w_post_tbl &amp;lt;-
  posterior_samples(w_mod) %&amp;gt;%
  select(-lp__) %&amp;gt;%
  rename(&amp;quot;mu&amp;quot; = b_Intercept)

w_post_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;keeocegnnv&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#keeocegnnv .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#keeocegnnv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#keeocegnnv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#keeocegnnv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#keeocegnnv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#keeocegnnv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#keeocegnnv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#keeocegnnv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#keeocegnnv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#keeocegnnv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#keeocegnnv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#keeocegnnv .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#keeocegnnv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#keeocegnnv .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#keeocegnnv .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#keeocegnnv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#keeocegnnv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#keeocegnnv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#keeocegnnv .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#keeocegnnv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#keeocegnnv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#keeocegnnv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#keeocegnnv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#keeocegnnv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#keeocegnnv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#keeocegnnv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#keeocegnnv .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#keeocegnnv .gt_left {
  text-align: left;
}

#keeocegnnv .gt_center {
  text-align: center;
}

#keeocegnnv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#keeocegnnv .gt_font_normal {
  font-weight: normal;
}

#keeocegnnv .gt_font_bold {
  font-weight: bold;
}

#keeocegnnv .gt_font_italic {
  font-style: italic;
}

#keeocegnnv .gt_super {
  font-size: 65%;
}

#keeocegnnv .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mu&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sigma&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6704184&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.004895014&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6685570&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.005720891&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6708761&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.003932762&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6713238&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.004217306&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6689520&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.005191162&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..1399999&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1400000&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6720105&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.005901202&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;calculate-2-sided-bayesian-tolerance-interval-from-the-posterior---non-informative-priors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Calculate 2-Sided Bayesian Tolerance Interval from the Posterior - Non-Informative Priors&lt;/h3&gt;
&lt;p&gt;Our goal is to calculate the 95/90 tolerance limit. The Bayesian analogue involves doing a row-wise calculation for each posterior draw where the equivalent of a tolerance interval is calculated using the standard formula: x +/- ks, where x is mu and s is sigma. The k factor is taken as the .95 quantile of a unit normal distribution (thus excluding the top and bottom 5% for 90% coverage). Doing this for every row in the posterior produces a distribution of upper and lower tolerance bounds - 1 observation for each credible set of mu and sigma. The 95% “confidence” analogue is done by excluding the 2.5% most extreme values from the low end of the lower bound distribution and the 2.5% most extreme values from the high end of the upper bound distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bt_lower &amp;lt;- quantile(w_post_tbl$mu - qnorm(0.95) * w_post_tbl$sigma, 0.025)
bt_upper &amp;lt;- quantile(w_post_tbl$mu + qnorm(0.95) * w_post_tbl$sigma, 0.975)

bt_tbl &amp;lt;- tibble(
  lower_coverage_limit = bt_lower * 100 %&amp;gt;% round(4),
  upper_coverage_limit = bt_upper * 100 %&amp;gt;% round(4),
  method = as_factor(&amp;quot;Bayesian&amp;quot;)
)

bt_tbl %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;cpqafktvfr&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#cpqafktvfr .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cpqafktvfr .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cpqafktvfr .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cpqafktvfr .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cpqafktvfr .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cpqafktvfr .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cpqafktvfr .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cpqafktvfr .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cpqafktvfr .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cpqafktvfr .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cpqafktvfr .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cpqafktvfr .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cpqafktvfr .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cpqafktvfr .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#cpqafktvfr .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#cpqafktvfr .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cpqafktvfr .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#cpqafktvfr .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cpqafktvfr .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#cpqafktvfr .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cpqafktvfr .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cpqafktvfr .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cpqafktvfr .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cpqafktvfr .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cpqafktvfr .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#cpqafktvfr .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cpqafktvfr .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#cpqafktvfr .gt_left {
  text-align: left;
}

#cpqafktvfr .gt_center {
  text-align: center;
}

#cpqafktvfr .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cpqafktvfr .gt_font_normal {
  font-weight: normal;
}

#cpqafktvfr .gt_font_bold {
  font-weight: bold;
}

#cpqafktvfr .gt_font_italic {
  font-style: italic;
}

#cpqafktvfr .gt_super {
  font-size: 65%;
}

#cpqafktvfr .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;lower_coverage_limit&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;upper_coverage_limit&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;method&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;65.75688&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;68.44929&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Bayesian&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;So the Bayesian version of a tolerance interval for those relatively vague priors is [65.84, 68.37] after back transforming the percentages to cg/g.&lt;/p&gt;
&lt;p&gt;The frequentist version for the same data is calculated as follows with the tolerance package (assuming normality of the experimental data):&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;frequentist-2-sided-tolerance-interval&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Frequentist 2-sided Tolerance Interval&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fr_tbl &amp;lt;- tidy(normtol.int(w_tbl$w, alpha = .05, P = .9, side = 2, method = &amp;quot;EXACT&amp;quot;)) %&amp;gt;%
  select(column, mean) %&amp;gt;%
  pivot_wider(
    names_from = &amp;quot;column&amp;quot;,
    values_from = &amp;quot;mean&amp;quot;
  ) %&amp;gt;%
  select(&amp;quot;2-sided.lower&amp;quot;, &amp;quot;2-sided.upper&amp;quot;) %&amp;gt;%
  mutate(method = as_factor(&amp;quot;Frequentist&amp;quot;)) %&amp;gt;%
  rename(
    lower_coverage_limit = &amp;quot;2-sided.lower&amp;quot;,
    upper_coverage_limit = &amp;quot;2-sided.upper&amp;quot;
  ) %&amp;gt;%
  select(method, everything())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-and-comparing-to-the-bayesian-version&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Combining and comparing to the Bayesian version:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fr_tbl %&amp;gt;%
  bind_rows(bt_tbl) %&amp;gt;%
  mutate_if(is.numeric, round, digits = 2) %&amp;gt;%
  mutate(priors = c(&amp;quot;non_informative (implied)&amp;quot;, &amp;quot;non-informative&amp;quot;)) %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;blgxhrurex&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#blgxhrurex .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#blgxhrurex .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#blgxhrurex .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#blgxhrurex .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#blgxhrurex .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#blgxhrurex .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#blgxhrurex .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#blgxhrurex .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#blgxhrurex .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#blgxhrurex .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#blgxhrurex .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#blgxhrurex .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#blgxhrurex .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#blgxhrurex .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#blgxhrurex .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#blgxhrurex .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#blgxhrurex .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#blgxhrurex .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#blgxhrurex .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#blgxhrurex .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#blgxhrurex .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#blgxhrurex .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#blgxhrurex .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#blgxhrurex .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#blgxhrurex .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#blgxhrurex .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#blgxhrurex .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#blgxhrurex .gt_left {
  text-align: left;
}

#blgxhrurex .gt_center {
  text-align: center;
}

#blgxhrurex .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#blgxhrurex .gt_font_normal {
  font-weight: normal;
}

#blgxhrurex .gt_font_bold {
  font-weight: bold;
}

#blgxhrurex .gt_font_italic {
  font-style: italic;
}

#blgxhrurex .gt_super {
  font-size: 65%;
}

#blgxhrurex .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;method&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;lower_coverage_limit&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;upper_coverage_limit&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;priors&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Frequentist&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;65.95&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;68.25&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;non_informative (implied)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Bayesian&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;65.76&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;68.45&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;non-informative&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
These are quite close! The Bayesian version does remain bit wider. Perhaps with more iterations of MCMC or with slightly less vague priors, the Bayesian version would creep tighter until they converge.&lt;/p&gt;
&lt;p&gt;Plotting the upper and lower tolerance limits from the Bayesian version we see that the distribution (upper and lower bounds) are not normal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;w_post_tbl %&amp;gt;%
  mutate(
    upper_95 = qnorm(p = .95, mean = mu, sd = sigma),
    lower_95 = qnorm(p = .05, mean = mu, sd = sigma),
    id = as_factor(&amp;quot;posterior&amp;quot;)
  ) %&amp;gt;%
  sample_n(size = 10000) %&amp;gt;%
  pivot_longer(cols = c(upper_95, lower_95), names_to = &amp;quot;quantile&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;%
  mutate(quantile = as_factor(quantile)) %&amp;gt;%
  ggplot(aes(x = value, y = id)) +
  geom_jitter(aes(color = quantile), width = .001, height = .1, size = .3, alpha = .05) +
  stat_halfeye(aes(fill = quantile), alpha = .7, position = position_nudge(y = .2)) +
  scale_color_manual(values = wes_palette(&amp;quot;Moonrise2&amp;quot;)) +
  scale_fill_manual(values = wes_palette(&amp;quot;Moonrise2&amp;quot;)) +
  #  scale_color_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  #  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;limegreen&amp;quot;)) +
  labs(
    x = &amp;quot;&amp;quot;,
    y = &amp;quot;&amp;quot;,
    title = &amp;quot;Distribution of Calculated Upper and Lower Tolerance Limits&amp;quot;,
    subtitle = &amp;quot;Calculated using Bayesian Method&amp;quot;,
    caption = &amp;quot;10,000 Predictions Sampled from Posterior (400,000 total)&amp;quot;
  ) +
  theme(
    legend.title = element_blank(),
    legend.position = &amp;quot;bottom&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-06-22-exploring-frequentist-and-bayesian-tolerance-intervals-in-r_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But the upper and lower bounds come in pairs. Plotting the pairs&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2345)

w_post_tbl %&amp;gt;%
  mutate(
    upper_95 = qnorm(p = .95, mean = mu, sd = sigma),
    lower_95 = qnorm(p = .05, mean = mu, sd = sigma)
  ) %&amp;gt;%
  sample_n(10000) %&amp;gt;%
  ggplot(aes(y = lower_95, x = upper_95)) +
  geom_point(alpha = .1, color = &amp;quot;#2c3e50&amp;quot;) +
  geom_hline(yintercept = bt_lower, linetype = 2) +
  geom_vline(xintercept = bt_upper, linetype = 2) +
  theme_minimal() %&amp;gt;%
  labs(
    x = &amp;quot;Predicted upper tolerance bound&amp;quot;,
    y = &amp;quot;Predicted lower tolerance bound&amp;quot;,
    title = &amp;quot;Credible Values for Upper and Lower 95% Bounds&amp;quot;,
    subtitle = &amp;quot;Based on Credible Posterior Draws&amp;quot;,
    caption = &amp;quot;10,000 Predictions Sampled from Posterior (400,000 total)&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-06-22-exploring-frequentist-and-bayesian-tolerance-intervals-in-r_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we can calculate the number of tolerance bounds that are both:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Above (within) the lower 95% tolerance bound for 90% coverage&lt;/li&gt;
&lt;li&gt;Below (within) the upper 95% tolerance bound for 90% coverage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This number should be less than 500 if the coverage interval is doing its job of capturing &amp;gt;= 95% of the credible range, since this is a subset of 10,000 draws from the full posterior (which wouldn’t display well).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2345)

w_post_tbl %&amp;gt;%
  mutate(
    upper_95 = qnorm(p = .95, mean = mu, sd = sigma),
    lower_95 = qnorm(p = .05, mean = mu, sd = sigma)
  ) %&amp;gt;%
  sample_n(10000) %&amp;gt;%
  filter(
    lower_95 &amp;gt; bt_lower,
    upper_95 &amp;lt; bt_upper
  ) %&amp;gt;%
  gt_preview()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;mrrkjpguhd&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#mrrkjpguhd .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mrrkjpguhd .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mrrkjpguhd .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mrrkjpguhd .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mrrkjpguhd .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mrrkjpguhd .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mrrkjpguhd .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mrrkjpguhd .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mrrkjpguhd .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mrrkjpguhd .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mrrkjpguhd .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mrrkjpguhd .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#mrrkjpguhd .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mrrkjpguhd .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#mrrkjpguhd .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#mrrkjpguhd .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mrrkjpguhd .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#mrrkjpguhd .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mrrkjpguhd .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#mrrkjpguhd .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mrrkjpguhd .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mrrkjpguhd .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mrrkjpguhd .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mrrkjpguhd .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mrrkjpguhd .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#mrrkjpguhd .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mrrkjpguhd .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#mrrkjpguhd .gt_left {
  text-align: left;
}

#mrrkjpguhd .gt_center {
  text-align: center;
}

#mrrkjpguhd .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mrrkjpguhd .gt_font_normal {
  font-weight: normal;
}

#mrrkjpguhd .gt_font_bold {
  font-weight: bold;
}

#mrrkjpguhd .gt_font_italic {
  font-style: italic;
}

#mrrkjpguhd .gt_super {
  font-size: 65%;
}

#mrrkjpguhd .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;mu&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;sigma&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;upper_95&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;lower_95&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6734567&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.005124883&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6818864&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6650271&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6705619&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.004108660&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6773200&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6638037&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6704661&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.005681679&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6798116&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6611206&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6709579&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.003404294&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6765575&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6653584&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6706663&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.004703547&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6784029&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6629296&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;6..9541&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;9542&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6713993&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.004295096&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6784641&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.6643345&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
9,542 rows means 458 of the least probable values excluded from this interval - this is acceptable coverage for the Bayesian interval.&lt;/p&gt;
&lt;p&gt;If you’ve made it this far, thank you for your attention.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;session-info&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Session Info&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 4.0.3 (2020-10-10)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 18363)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] gt_0.2.2          patchwork_1.1.0   wesanderson_0.3.6 tolerance_2.0.0  
##  [5] tidybayes_2.3.1   broom_0.7.2       brms_2.14.4       Rcpp_1.0.5       
##  [9] here_1.0.0        forcats_0.5.0     stringr_1.4.0     dplyr_1.0.2      
## [13] purrr_0.3.4       readr_1.4.0       tidyr_1.1.2       tibble_3.0.4     
## [17] ggplot2_3.3.2     tidyverse_1.3.0  
## 
## loaded via a namespace (and not attached):
##   [1] readxl_1.3.1            backports_1.2.0         plyr_1.8.6             
##   [4] igraph_1.2.6            splines_4.0.3           svUnit_1.0.3           
##   [7] crosstalk_1.1.0.1       rstantools_2.1.1        inline_0.3.16          
##  [10] digest_0.6.27           htmltools_0.5.0         rsconnect_0.8.16       
##  [13] fansi_0.4.1             checkmate_2.0.0         magrittr_2.0.1         
##  [16] modelr_0.1.8            RcppParallel_5.0.2      matrixStats_0.57.0     
##  [19] xts_0.12.1              prettyunits_1.1.1       colorspace_2.0-0       
##  [22] rvest_0.3.6             ggdist_2.3.0            haven_2.3.1            
##  [25] xfun_0.19               callr_3.5.1             crayon_1.3.4           
##  [28] jsonlite_1.7.1          lme4_1.1-25             zoo_1.8-8              
##  [31] glue_1.4.2              gtable_0.3.0            emmeans_1.5.2-1        
##  [34] webshot_0.5.2           V8_3.4.0                distributional_0.2.1   
##  [37] pkgbuild_1.1.0          rstan_2.21.2            abind_1.4-5            
##  [40] scales_1.1.1            mvtnorm_1.1-1           DBI_1.1.0              
##  [43] miniUI_0.1.1.1          xtable_1.8-4            stats4_4.0.3           
##  [46] StanHeaders_2.21.0-6    DT_0.16                 htmlwidgets_1.5.2      
##  [49] httr_1.4.2              threejs_0.3.3           arrayhelpers_1.1-0     
##  [52] ellipsis_0.3.1          farver_2.0.3            pkgconfig_2.0.3        
##  [55] loo_2.3.1               sass_0.3.1              dbplyr_2.0.0           
##  [58] labeling_0.4.2          manipulateWidget_0.10.1 tidyselect_1.1.0       
##  [61] rlang_0.4.9             reshape2_1.4.4          later_1.1.0.1          
##  [64] munsell_0.5.0           cellranger_1.1.0        tools_4.0.3            
##  [67] cli_2.2.0               generics_0.1.0          ggridges_0.5.2         
##  [70] evaluate_0.14           fastmap_1.0.1           yaml_2.2.1             
##  [73] processx_3.4.4          knitr_1.30              fs_1.5.0               
##  [76] rgl_0.103.5             nlme_3.1-150            mime_0.9               
##  [79] projpred_2.0.2          xml2_1.3.2              compiler_4.0.3         
##  [82] bayesplot_1.7.2         shinythemes_1.1.2       rstudioapi_0.13        
##  [85] gamm4_0.2-6             curl_4.3                reprex_0.3.0           
##  [88] statmod_1.4.35          stringi_1.5.3           ps_1.4.0               
##  [91] blogdown_0.15           Brobdingnag_1.2-6       lattice_0.20-41        
##  [94] Matrix_1.2-18           nloptr_1.2.2.2          markdown_1.1           
##  [97] shinyjs_2.0.0           vctrs_0.3.5             pillar_1.4.7           
## [100] lifecycle_0.2.0         bridgesampling_1.0-0    estimability_1.3       
## [103] httpuv_1.5.4            R6_2.5.0                bookdown_0.21          
## [106] promises_1.1.1          gridExtra_2.3           codetools_0.2-18       
## [109] boot_1.3-25             colourpicker_1.1.0      MASS_7.3-53            
## [112] gtools_3.8.2            assertthat_0.2.1        rprojroot_2.0.2        
## [115] withr_2.3.0             shinystan_2.5.0         mgcv_1.8-33            
## [118] parallel_4.0.3          hms_0.5.3               grid_4.0.3             
## [121] coda_0.19-4             minqa_1.2.4             rmarkdown_2.5          
## [124] shiny_1.5.0             lubridate_1.7.9.2       base64enc_0.1-3        
## [127] dygraphs_1.1.1.6&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Stoudt S, Pintar A, Possolo A (2021) Coverage Intervals. J Res Natl Inst Stan 126:126004. &lt;a href=&#34;https://doi.org/10.6028/jres.126.004&#34; class=&#34;uri&#34;&gt;https://doi.org/10.6028/jres.126.004&lt;/a&gt;. &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Simulation With a Random Effects Model - Gage R&amp;R as a Case Study</title>
      <link>/post/simulation-with-a-random-effects-model-gage-r-r-as-a-case-study/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/simulation-with-a-random-effects-model-gage-r-r-as-a-case-study/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/viz/viz.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/DiagrammeR-styles/styles.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/grViz-binding/grViz.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I&#39;ve heard it said that common statistical tests are just linear models.&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; It turns out that Gage R&amp;amp;R, a commonly used measurement system analysis (MSA), is no different. In this post I&#39;ll attempt to provide some background on Gage R&amp;amp;R, describe the underlying model, and then walk through a method for simulation that can be useful for things like power analysis or visualization of uncertainty.&lt;/p&gt;
&lt;p&gt;What is Gage R&amp;amp;R?&lt;/p&gt;
&lt;p&gt;When evaluating implantable medical devices it is generally necessary to perform the following types of inspection to ensure product quality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dimensional inspection of implant features&lt;/li&gt;
&lt;li&gt;Visual inspection of implant surface and component interfaces&lt;/li&gt;
&lt;li&gt;Benchtop performance evaluation of implant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The primary purpose of these costly and rigorous inspection processes is to screen out bad product. The ramifications of non-conforming parts reaching the field can be fatal. As such, it is important to understand any limitations of key measurement systems and, if possible, quantity their uncertainty. The primary statistical tool for this job is called Gage R&amp;amp;R. The Gage R&amp;amp;R attempts to quantify the total variation within a series of measurements and then describe the relative contributions of parts, operators, and repeated measurements (unexplained error). Operator error is called &amp;quot;reproducibility&amp;quot;; unexplained error when a measurement is repeated under presumably identical conditions is called &amp;quot;repeatability&amp;quot;. The total variation among these components must be controlled and limited. A typical crossed structure is shown below: &lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/./img/crossed.png&#34; width=&#34;100%&#34; height=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Gage R&amp;amp;R training for engineers usually involves:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Definitions of repeatability and reproducibility (the &amp;quot;R&amp;amp;R&amp;quot;)&lt;/li&gt;
&lt;li&gt;Guidance for directing Minitab to set up the experiment&lt;/li&gt;
&lt;li&gt;Guidance for directing Minitab to analyze the results and provide an output&lt;/li&gt;
&lt;li&gt;An acceptance criteria (with no or limited context)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When I was first exposed to the material, I recall grappling with terminology and definitions, struggling with rote memorization, and having no understanding of the assumptions or limitations of the technique. Here&#39;s the piece that was never explained to me (and many other engineers):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Gage R&amp;amp;R study is a random effects regression model with two random variables: operator and part. By modeling the factors as random effects and applying a few assumptions, we can access and analyze the variance associated with each component using standard ANOVA techniques.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Specifically, the model commonly used for a crossed Gage R&amp;amp;R is:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\ y_{ijk} = \mu + O_i + P_j + (PO)_{ij} + E_{(ij)k} \]&lt;/span&gt; where:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ y_{ijk}\)&lt;/span&gt; = a specific, individual measurement&lt;br /&gt;
&lt;span class=&#34;math inline&#34;&gt;\(\ \mu\)&lt;/span&gt; = overall mean of all the measurements&lt;br /&gt;
&lt;span class=&#34;math inline&#34;&gt;\(\ O\)&lt;/span&gt; = random variable for effect of operator. Assumed normal: &lt;span class=&#34;math inline&#34;&gt;\(\ O_i \sim N(0,\sigma^2_O)\)&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;math inline&#34;&gt;\(\ P\)&lt;/span&gt; = random variable for effect of part. Assumed normal: &lt;span class=&#34;math inline&#34;&gt;\(\ P_i \sim N(0,\sigma^2_P)\)&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;math inline&#34;&gt;\(\ (PO)\)&lt;/span&gt; = random variable for sample x operator interaction. Assumed normal: &lt;span class=&#34;math inline&#34;&gt;\(\ (PO)_{ij} \sim N(0,\sigma^2_{PO})\)&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;math inline&#34;&gt;\(\ E\)&lt;/span&gt; = random variable for unexplained, residual error (referred to as &amp;quot;repeatability&amp;quot; since differences in measurements taken under identical conditions are mapped here). &lt;span class=&#34;math inline&#34;&gt;\(\ E_{(ij)k} \sim N(0,\sigma^2_{E})\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This is really cool! - Understanding the model unlocks the insight behind the method and casts a bright light on the assumptions. It puts a seemingly obscure, memorized technique into a familiar regression framework. It also facilitates simulation.&lt;/p&gt;
&lt;p&gt;Why is it a random effects model? What is a random effects model? The answer to that question is actually tricky (and beyond the scope of this post) but there is some good information &lt;a href=&#34;http://www.stat.columbia.edu/~gelman/research/published/banova7.pdf&#34;&gt;here&lt;/a&gt; for those who want to dive deeper. &lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; While not a formal definition, it may be sufficient to know that random effects are estimated with partial pooling while others are not.&lt;/p&gt;
&lt;p&gt;In this post I will attempt to show how to use the lme4 to simulate outcomes using a random effects model like the one listed above and then repeat many such simulations to gain understanding of uncertainty and sensitivity in the underlying experiment.&lt;a href=&#34;#fn4&#34; class=&#34;footnoteRef&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; Fun!&lt;/p&gt;
&lt;p&gt;Here are the libraries we&#39;ll use.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(lme4)
library(tidyverse)
library(knitr)
library(here)
library(broom.mixed)
library(tidybayes)
library(DiagrammeR)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;simulating-one-outcome-of-a-gage-rr-experiment&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Simulating One Outcome of a Gage R&amp;amp;R Experiment&lt;/h2&gt;
&lt;p&gt;Before we worry about running a bunch of simulations, let&#39;s just figure out how to run one instance of a Gage R&amp;amp;R. There are some really good tutorials out there for simulating outcomes from random and mixed effects models.&lt;a href=&#34;#fn5&#34; class=&#34;footnoteRef&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt; &lt;a href=&#34;#fn6&#34; class=&#34;footnoteRef&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt; It ends up being a little bit tricky because the parameters that you select need to combine within the design matrix in a certain way such that an analysis of the simulated outcomes can recover the specified parameters. If you are good at matrix math you can do this manually. I am &lt;em&gt;not&lt;/em&gt; very good at matrix math - but fortunately Robert Long on Cross Validated&lt;a href=&#34;#fn7&#34; class=&#34;footnoteRef&#34; id=&#34;fnref7&#34;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt; showed me a really cool little hack for figuring out the form of the Design Matrix Z and using it for simulation. Basically, we will first set up a dummy experiment with the desired number of parts, operators, and measurements and then use lme4 to extract Z and store it. Then we can set up a vector of all our simulated random effects and combine them with matrix multiplication to build the simulated observation. It sounds tricky but it&#39;s surprisingly simple! in summary, here is the plan:&lt;/p&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:500px;&#34; class=&#34;grViz html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph flowchart {\n      # node definitions with substituted label text\n      node [fontname = Helvetica, shape = rectangle, fillcolor = yellow]        \n      tab1 [label = \&#34;Step 1: Setup a dummy experiment\&#34;]\n      tab2 [label = \&#34;Step 2: Fit a model to the dummy data\&#34;]\n      tab3 [label = \&#34;Step 3: Extract and store the Design Matrix Z from the dummy model\&#34;]\n      tab4 [label = \&#34;Step 4: Simulate random effects using rnorm or similar\&#34;]\n      tab5 [label = \&#34;Step 5: Multiply Z by random effects vector\&#34;]\n      tab6 [label = \&#34;Step 6: Combine result with simulated residual error to generate simulated observations\&#34;]\n      tab7 [label = \&#34;Step 7: Fit a model to the simulated obervations\&#34;]\n      # edge definitions with the node IDs\n      tab1 -&gt; tab2 -&gt; tab3 -&gt; tab4 -&gt; tab5 -&gt; tab6 -&gt; tab7;\n      }\n      &#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt; The good news is that none of the above steps are very hard, even if they look unfamiliar. Let&#39;s go through it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-1-set-up-a-dummy-experiment&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1: Set up a dummy experiment&lt;/h2&gt;
&lt;p&gt;I call this a dummy experiment because while it will have the proper number of operators/parts/replicates, we&#39;ll just drop in some dummy data as the observations. The goal here is to allow lme4 to create the structure of the experiment (the design matrix) which we can use later to get the real simulated observations.&lt;/p&gt;
&lt;p&gt;First, we specify the number of parts, operators, and measurements we want the experiment be comprised of. 10, 3, and 2, respectively, is a common experimental setup in industry and we use it here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_part &amp;lt;- 10 # number of parts
n_oper &amp;lt;- 3 # number of opers
n_measurements &amp;lt;- 2 # number of replications&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now assign names to each part, operator, trial and determine how many observations will be in the study: n_matrix.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# assign names to each part, operator, trial
part &amp;lt;- str_glue(&amp;quot;part_{1:n_part}&amp;quot;) %&amp;gt;% as_factor()
operator &amp;lt;- str_glue(&amp;quot;oper_{1:n_oper}&amp;quot;) %&amp;gt;% as_factor()
measurement &amp;lt;- str_glue(&amp;quot;measurment_{1:n_measurements}&amp;quot;) %&amp;gt;% as_factor()

n_matrix &amp;lt;- n_part * n_oper * n_measurements # number of observations in the study

n_matrix&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 60&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we use crossing() to build the full set of experimental conditions. Dummy observations are created for each setting and assigned to a new col: &amp;quot;measurement&amp;quot;. Overall mean of 10 is chosen arbitrarily and isn&#39;t important. Note: we are creating observations(measurements) here but have not concerned ourselves with specifying the parameters of any random variables yet. We just need a placeholder in the measurement column.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# generate experimental design and outcomes for dummy study
grr_dummy_tbl &amp;lt;- crossing(part, operator, measurement) %&amp;gt;%
  mutate(measurement = 10 + rnorm(n_matrix))

grr_dummy_tbl %&amp;gt;%
  head(7) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;operator&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;measurement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.87815&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.82016&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.12168&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.21272&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.55464&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.18606&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.95731&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grr_dummy_tbl %&amp;gt;%
  tail(7) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;operator&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;measurement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9.661665&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.319520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.668104&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.483027&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9.700252&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.967124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9.627140&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-fit-a-model-to-the-dummy-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2: Fit a model to the dummy data&lt;/h2&gt;
&lt;p&gt;Now we fit a model to the dummy data. The summary isn&#39;t important - we just want access to the structure which we will get in the next step.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# fit model for dummy study
m1 &amp;lt;- lmer(measurement ~ (1 | part) + (1 | operator) + (1 | part:operator), data = grr_dummy_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-extract-and-store-the-design-matrix-z-from-the-dummy-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3: Extract and store the Design Matrix Z from the dummy model&lt;/h2&gt;
&lt;p&gt;Here&#39;s the little hack: Use getME() to pull the design matrix Z from the dummy model. Alternately, you can use lFormula() but you will have to fish the matrix out and transpose it which is not as intuitive to me.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extract design matrix Z from dummy model
design_matrix_Z &amp;lt;- getME(m1, &amp;quot;Z&amp;quot;) %&amp;gt;% as.matrix()

design_matrix_Z %&amp;gt;% head(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   part_1:oper_1 part_1:oper_2 part_1:oper_3 part_2:oper_1 part_2:oper_2
## 1             1             0             0             0             0
##   part_2:oper_3 part_3:oper_1 part_3:oper_2 part_3:oper_3 part_4:oper_1
## 1             0             0             0             0             0
##   part_4:oper_2 part_4:oper_3 part_5:oper_1 part_5:oper_2 part_5:oper_3
## 1             0             0             0             0             0
##   part_6:oper_1 part_6:oper_2 part_6:oper_3 part_7:oper_1 part_7:oper_2
## 1             0             0             0             0             0
##   part_7:oper_3 part_8:oper_1 part_8:oper_2 part_8:oper_3 part_9:oper_1
## 1             0             0             0             0             0
##   part_9:oper_2 part_9:oper_3 part_10:oper_1 part_10:oper_2 part_10:oper_3
## 1             0             0              0              0              0
##   part_1 part_2 part_3 part_4 part_5 part_6 part_7 part_8 part_9 part_10
## 1      1      0      0      0      0      0      0      0      0       0
##   oper_1 oper_2 oper_3
## 1      1      0      0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# alternate method:
# mylF &amp;lt;- lFormula(m1, data = grr_dummy_tbl) # Process the formula against the data
# design_matrix_Z &amp;lt;- mylF$reTrms$Zt %&amp;gt;% as.matrix() %&amp;gt;% t()  # Extract the Z matrix&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So much easier than constructing this matrix yourself! (at least for me - it&#39;s been a while now since I took linear algebra course and tensor notation was always challenging).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4-simulate-random-effects-using-rnorm-or-similar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 4: Simulate random effects using rnorm or similar&lt;/h2&gt;
&lt;p&gt;With the matrix Z in hand we can get get rid of the dummy model and get down to business with specifying and simulating our random effects. Specify standard deviations for each effect and simulate using rnorm(). 1, 2, 9, and 4 are the parameters that we will compare our estimates against later on.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(0118)
int_intercepts_sd &amp;lt;- 1 # standard dev of interaction random effects
oper_intercepts_sd &amp;lt;- 2 # standard dev of operator random effects
part_intercepts_sd &amp;lt;- 9 # standard dev of operator random effects
random_error_repeatability &amp;lt;- 4 # standard dev of random error (repeatability)

# simulate random effects using input params for sd
int_intercepts &amp;lt;- rnorm(n = n_part * n_oper, mean = 0, sd = int_intercepts_sd)
oper_intercepts &amp;lt;- rnorm(n = n_oper, mean = 0, sd = oper_intercepts_sd)
part_intercepts &amp;lt;- rnorm(n = n_part, mean = 0, sd = part_intercepts_sd)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Combine all the random effects into a vector. Order does matter here - see comment below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# vector of all random effect intercepts (order matters here: ineraction, part, oper if n_oper &amp;lt; n_part, else swith part and oper)

random_effects_intercepts &amp;lt;- c(int_intercepts, part_intercepts, oper_intercepts)
random_effects_intercepts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  -1.676079782   0.167651720  -0.008545182   0.296888139  -1.706489201
##  [6]  -1.049094451  -0.102206749   0.682492401  -0.511117703   0.487346673
## [11]  -1.345812057   0.527128496   0.686104071  -0.221484626   0.532399538
## [16]   0.597393622   0.831437918   0.735023009   0.830043214   0.769163682
## [21]   1.830416344   0.182049999   1.018859437   0.844012288   0.575312043
## [26]   0.006855854  -0.231251230   0.205834471   0.250942908  -1.575663200
## [31]  19.280822421  10.499576059  -3.997253469  -7.111499870   6.986996777
## [36]  -4.861684848 -13.031232590  14.723410605  16.967969396  22.293922487
## [41]  -1.345816596  -3.905496830  -4.061788248&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5-multiply-z-by-random-effects-vector&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 5: Multiply Z by random effects vector&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;step-6-combine-result-with-simulated-residual-error-to-generate-simulated-observations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 6: Combine result with simulated residual error to generate simulated observations&lt;/h2&gt;
&lt;p&gt;We&#39;ll do steps 5 and 6 together here: multiply the design matrix Z by the vector of random effects intercepts and then add in a residual error. %*% is the matrix multiplication operator. Again - the overall mean of 10 is arbitrary and does not change the analysis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create observations (add in repeatability random error to each term). %*% is matrix multiplication
grr_sim_tbl &amp;lt;- grr_dummy_tbl %&amp;gt;%
  mutate(measurement = 10 + design_matrix_Z %*% random_effects_intercepts + rnorm(
    n = nrow(grr_dummy_tbl),
    mean = 0,
    sd = random_error_repeatability
  ))

grr_sim_tbl %&amp;gt;%
  head(10) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;operator&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;measurement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;25.335155&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;28.246367&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;15.799074&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;23.051405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;22.791039&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;17.986515&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;19.378715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;14.934401&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9.109815&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;oper_2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;14.250238&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;step-7-fit-a-model-to-the-simulated-obervations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 7: Fit a model to the simulated obervations&lt;/h2&gt;
&lt;p&gt;Once again we fit a model, but this time the observations are meaningful because we constructed them properly using the design matrix Z. broom.mixed::tidy() is able to bring the results into tibble format where we can clean a bit and view the variance contribution of each variable. This gives a point estimate of standard deviations for the random effects that can be compared against the reference inputs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# fit a model to the simulated dataset
sim_m_fit &amp;lt;- lmer(measurement ~ (1 | part) + (1 | operator) + (1 | part:operator), data = grr_sim_tbl)

# tibble of results for a single simulation
one_grr_result_tbl &amp;lt;-
  broom.mixed::tidy(sim_m_fit, effects = &amp;quot;ran_pars&amp;quot;) %&amp;gt;%
  rename(
    st_dev_estimate = estimate,
    variable = group
  ) %&amp;gt;%
  mutate(
    variance_estimate = st_dev_estimate^2,
    sim_number = 1
  ) %&amp;gt;%
  select(sim_number, variable, st_dev_estimate, variance_estimate)

one_grr_result_tbl %&amp;gt;% kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;sim_number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;st_dev_estimate&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;variance_estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.4484307&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.2010901&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.4718335&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;131.6029628&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.6062900&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.5801677&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3.9540576&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;15.6345714&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Recall that the true parameters for sd were 1, 9, 2, and 4. These estimates aren&#39;t dead on but we don&#39;t really understand how much uncertainty is involved with our estimate. We&#39;ll return to that in a moment.&lt;/p&gt;
&lt;p&gt;One common performance metric for a Gage R&amp;amp;R is %tolerance: 6 (or some other constant) times the sum of the measurement system variance (everything except for part variance) divided by the tolerance span for this particular measurement.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\ Percent\space Tolerance = 6 \times (\hat\sigma_E^2 + \hat\sigma_O^2 + \hat\sigma_{PO}^2)\space/\space Tolerance \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;It is common for the tolerance span to be approximately 6 x the standard deviation of the parts population. Let&#39;s make that assumption here so we can estimate the percent tolerance from the data and compare to the true value. Once the simulation is established, the standard deviation of the parts can be adjusted to see how the percent tolerance changes for a given sd of operators, part:operator interaction, and residual.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;one_grr_tol_outcome_tbl &amp;lt;- one_grr_result_tbl %&amp;gt;%
  filter(variable != &amp;quot;part&amp;quot;) %&amp;gt;%
  group_by(sim_number) %&amp;gt;%
  summarize(grr_variance_est = sum(variance_estimate)) %&amp;gt;%
  mutate(true_tol_pct = scales::percent((int_intercepts_sd^2 + oper_intercepts_sd^2 + random_error_repeatability^2) / part_intercepts_sd)) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(est_tol_pct = scales::percent(grr_variance_est / part_intercepts_sd))

one_grr_tol_outcome_tbl %&amp;gt;% kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;sim_number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;grr_variance_est&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;true_tol_pct&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;est_tol_pct&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;18.41583&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;233%&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;205%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since 205% is &amp;gt; 30%, this experiment would &amp;quot;fail&amp;quot; and the measurement system would not be validated. Not really interesting since we just chose arbitrary numbers but the estimate is reasonably close to the true value which is more important. It would be good to know that if we repeated the simulation a lot of times, the average estimate will converge near the true value.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scale-simulation-with-a-function&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Scale Simulation with a Function&lt;/h1&gt;
&lt;p&gt;If want to simulate a lot of Gage R&amp;amp;R&#39;s, we can take all the code chunks above and wrap them in a function and then just swap out the values we want to adjust for argument in the function. The function below will take:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;n = number of simulations&lt;/li&gt;
&lt;li&gt;np = number of parts&lt;/li&gt;
&lt;li&gt;no = number of operators&lt;/li&gt;
&lt;li&gt;nm = number of measurements per operator&lt;/li&gt;
&lt;li&gt;iisd = interaction intercepts standard deviation&lt;/li&gt;
&lt;li&gt;oisd = operator intercepts standard deviation&lt;/li&gt;
&lt;li&gt;pisd = part intercepts standard deviation&lt;/li&gt;
&lt;li&gt;rer = random error (repeatability) standard deviation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;m pretty sure this operation could be done faster and cleaner than the code shown below, but I like how the code maps to the single case simulation above for easy human readability. For this reason, I use a for loop instead of some map() variant.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grr_fct &amp;lt;- function(n, np, no, nm, iisd, oisd, pisd, rer) {
  all_grr_results_tbl &amp;lt;- NULL # tibble to hold results
  n_sims &amp;lt;- n # number of simulations
  n_part &amp;lt;- np # number of parts
  n_oper &amp;lt;- no # number of opers
  n_measurements &amp;lt;- nm # number of replications

  int_intercepts_sd &amp;lt;- iisd # standard dev of interaction random effects
  oper_intercepts_sd &amp;lt;- oisd # standard dev of operator random effects
  part_intercepts_sd &amp;lt;- pisd # standard dev of parts random effects
  random_error_repeatability &amp;lt;- rer # standard dev of random error (repeatability)

  # assign names to each per, operator, trial
  part &amp;lt;- str_glue(&amp;quot;part_{1:n_part}&amp;quot;) %&amp;gt;% as_factor()
  operator &amp;lt;- str_glue(&amp;quot;oper_{1:n_oper}&amp;quot;) %&amp;gt;% as_factor()
  measurement &amp;lt;- str_glue(&amp;quot;measurment_{1:n_measurements}&amp;quot;) %&amp;gt;% as_factor()

  n_matrix &amp;lt;- n_part * n_oper * n_measurements # number of observations in the study

  for (i in 1:n) {

    # generate experimental designa and outcomes for dummy study
    grr_dummy_tbl &amp;lt;- crossing(part, operator, measurement) %&amp;gt;%
      mutate(measurement = 10 + rnorm(n_matrix))

    # fit model for dummy study
    m1 &amp;lt;- lmer(measurement ~ (1 | part) + (1 | operator) + (1 | part:operator), data = grr_dummy_tbl)

    # extract design matrix Z from dummy model
    design_matrix_Z &amp;lt;- getME(m1, &amp;quot;Z&amp;quot;) %&amp;gt;% as.matrix()

    # simulate random effects using input params for sd
    int_intercepts &amp;lt;- rnorm(n = n_part * n_oper, mean = 0, sd = int_intercepts_sd)
    oper_intercepts &amp;lt;- rnorm(n = n_oper, mean = 0, sd = oper_intercepts_sd)
    part_intercepts &amp;lt;- rnorm(n = n_part, mean = 0, sd = part_intercepts_sd)

    # vector of all random effect intercepts (order matters here: ineraction, oper, part)
    random_effects_intercepts &amp;lt;- c(int_intercepts, part_intercepts, oper_intercepts)

    # create observations (add in repeatability random error to each term). %*% is matrix multiplication
    grr_sim_tbl &amp;lt;- grr_dummy_tbl %&amp;gt;%
      mutate(measurement = 10 + design_matrix_Z %*% random_effects_intercepts + rnorm(
        n = nrow(grr_dummy_tbl),
        mean = 0,
        sd = random_error_repeatability
      ))

    # fit a model to the simulated dataset
    sim_m_fit &amp;lt;- lmer(measurement ~ (1 | part) + (1 | operator) + (1 | part:operator), data = grr_sim_tbl)

    # tibble of results for a single simulation
    one_grr_result_tbl &amp;lt;-
      broom.mixed::tidy(sim_m_fit, effects = &amp;quot;ran_pars&amp;quot;) %&amp;gt;%
      rename(
        st_dev_estimate = estimate,
        variable = group
      ) %&amp;gt;%
      mutate(
        variance_estimate = st_dev_estimate^2,
        sim_number = i
      ) %&amp;gt;%
      select(sim_number, variable, st_dev_estimate, variance_estimate)

    # append this recent simulation to the others
    all_grr_results_tbl &amp;lt;- bind_rows(all_grr_results_tbl, one_grr_result_tbl)
  }
  return(all_grr_results_tbl)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test the function by calling it once, asking for just 3 simulations:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fcn_test_tbl &amp;lt;- grr_fct(n = 3, np = 10, no = 3, nm = 2, iisd = 4, oisd = 3, pisd = 2, rer = 1)

fcn_test_tbl %&amp;gt;% kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;sim_number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;st_dev_estimate&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;variance_estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3.4214284&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.7061726&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.1832882&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.7667475&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.6916881&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.8618086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0355244&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0723107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.7726138&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;22.7778428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0010317&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0000011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0763577&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.1585460&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.0704728&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;16.5687489&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.2724219&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.6190574&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3.2107023&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10.3086089&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.9178515&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.8424514&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Everything is looking good! The results from n=3 simulations have completed and are summarized nicely in the results tbl.&lt;/p&gt;
&lt;p&gt;Rather than manually call the function and input the arguments every time, we can populate a &amp;quot;setup tbl&amp;quot; that contains all the arguments that we will want to look at. Within the tbl we can look at anything we want. For example, we might want several different values for number of operators, or several different levels of standard deviation for one of the random effects. In this case, I was interested in several different magnitudes of standard deviation for the population of parts because the part sd is used as a surrogate for the tolerance percentage calculation as shown above. This is a useful simulation because we should be able to visualize:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the average of the simulation converge near the true value for percent tolerance?&lt;/li&gt;
&lt;li&gt;How often might individual estimates of pct tol &amp;quot;fail&amp;quot; (&amp;gt; 30%) when the average of the estimates passes (&amp;lt; 30%)?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fist, the setup_tbl. Note: the variance of the random variables for operator, repeatability(residual), and part:operator interaction are all held at 1 while the variance for part is increased.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_setup_tbl &amp;lt;- tibble(
  n_sims = 200,
  n_part = 10,
  n_oper = 3,
  n_meas = 2,
  int_sd = 1,
  oper_sd = 1,
  #  part_var = 1,
  part_var = c(2^(0:10)),
  repeatab_sd = 1
) %&amp;gt;%
  mutate(
    row_id = row_number()
  ) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(part_sd = part_var^.5) %&amp;gt;%
  mutate(tol_pct_true = 6 * (int_sd^2 + oper_sd^2 + repeatab_sd^2) / (6 * part_sd))

sim_setup_tbl %&amp;gt;% kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;n_sims&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_oper&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_meas&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;int_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;oper_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_var&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;repeatab_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;row_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;tol_pct_true&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.414214&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.1213203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.5000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.828427&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0606602&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.7500000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5.656854&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.5303301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;64&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.3750000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11.313709&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.2651650&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;16.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.1875000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;512&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;22.627417&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.1325825&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1024&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;32.000000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0937500&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following code executes many simulations, one for each set of arguments from the rows above. Each simulation from each row results in a tibble of outcomes which is stored in a list column and the unnested later on to make a big tibble. I&#39;m not actually 100% sure that you need rowwise() here - it works fine with it in place and makes sense to me that you would group by rows here but I&#39;m still trying to figure out what row-based workflow works best for me. I believe there are other good options that use the map family.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(0118)

#commented out because this takes a while to run

# sim_outcomes_tbl &amp;lt;- sim_setup_tbl %&amp;gt;%
#   rowwise() %&amp;gt;% # may not be needed
#   mutate(sim_outcomes = list(grr_fct(n = n_sims, np = n_part, no = n_oper, nm = n_meas, iisd = int_sd, oisd = oper_sd, pisd = part_sd, rer = repeatab_sd))) %&amp;gt;%
#   select(sim_outcomes, everything()) %&amp;gt;%
#   unnest(cols = c(sim_outcomes)) %&amp;gt;%
#   mutate_if(is.character, as_factor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_outcomes_tbl %&amp;gt;%
  select(sim_number, variable, st_dev_estimate, n_sims, n_part, n_meas, int_sd, oper_sd, repeatab_sd, part_sd) %&amp;gt;%
  head(12) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;sim_number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;st_dev_estimate&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_sims&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_meas&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;int_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;oper_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;repeatab_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_sd&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.5511238&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.8165034&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.5369841&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0638795&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.8046511&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.1717770&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.9339445&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.9631640&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0850250&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0031052&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.7490297&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.9284068&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We might look at the results for a single group of arguments in the setup tbl by filtering to a specific row (I choose row 4 arbitrarily here). Note that &amp;quot;row_id&amp;quot; is a little misleading here because the data has been reshaped. Filtering fora specific row_id returns results from the set of simulations from a single row of parameters in the original setup_tbl. Here we look at the results form row_4 where the true part sd was 2.82 while the sd for operator, Residual, and interaction were all 1.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- sim_outcomes_tbl %&amp;gt;%
  filter(row_id == 4) %&amp;gt;%
  filter(st_dev_estimate &amp;gt; .001) %&amp;gt;%
  ggplot(aes(x = variable, y = st_dev_estimate)) +
  geom_jitter(width = .05, alpha = .5, size = .6) +
  geom_hline(yintercept = 1, lty = 2, color = &amp;quot;#2c3e50&amp;quot;) +
  geom_hline(yintercept = 2.8428472, lty = 2, color = &amp;quot;#2c3e50&amp;quot;) +
  #    stat_summary(fun.y= mean, fun.ymin=mean, fun.ymax=mean, geom=&amp;quot;crossbar&amp;quot;, width=0.2, color=&amp;quot;red&amp;quot;) +
  stat_halfeye(aes(fill = variable), point_interval = mean_qi, alpha = .7, position = position_nudge(x = .15)) +
  labs(
    title = &amp;quot;Gage R&amp;amp;R - Estimates for Component Standard Deviations&amp;quot;,
    subtitle = str_glue(&amp;quot;Settings: {sim_outcomes_tbl$n_part[1]} Parts, {sim_outcomes_tbl$n_oper[1]} Operators, {sim_outcomes_tbl$n_meas[1]} Measurements&amp;quot;),
    x = &amp;quot;&amp;quot;,
    y = &amp;quot;Standard Deviation Estimate&amp;quot;,
    caption = &amp;quot;dotted line marks true population standard dev\n Interval marks median, .66 quantile, .95 quantile&amp;quot;
  ) +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  scale_fill_viridis_d(option = &amp;quot;c&amp;quot;, end = .7)

a&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-09-simulation-with-a-random-effects-model-gage-r-r-as-a-case-study_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looks good! The averages of the set of simulations are converging nicely and we get a good feel for how much uncertainty would be expected for a single trial.&lt;/p&gt;
&lt;p&gt;Now to plot multiple simulations. A bit of data preparation is required to plot the true values on the same canvas as the individual sims. There is probably a cleaner way to do this directly within ggplot - but the way I do it here is to pull the values from the rows down into tidy format with pivot_longer and then do some grouping and joining.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_tbl &amp;lt;- sim_outcomes_tbl %&amp;gt;% select(sim_number, row_id)

t &amp;lt;- sim_outcomes_tbl %&amp;gt;%
  select(sim_number, variable, row_id, int_sd, oper_sd, part_sd, repeatab_sd, st_dev_estimate) %&amp;gt;%
  pivot_longer(cols = c(int_sd, oper_sd, part_sd, repeatab_sd)) %&amp;gt;%
  right_join(sim_tbl) %&amp;gt;%
  group_by(variable, name, value, row_id) %&amp;gt;%
  count() %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(variable = case_when(
    name == &amp;quot;int_sd&amp;quot; ~ &amp;quot;part:operator&amp;quot;,
    name == &amp;quot;oper_sd&amp;quot; ~ &amp;quot;operator&amp;quot;,
    name == &amp;quot;part_sd&amp;quot; ~ &amp;quot;part&amp;quot;,
    TRUE ~ &amp;quot;Residual&amp;quot;
  )) %&amp;gt;%
  right_join(sim_setup_tbl)

t %&amp;gt;%
  head(10) %&amp;gt;%
  select(variable, value, row_id, n_sims, n_part, n_oper, n_meas, int_sd, oper_sd, part_sd, repeatab_sd, tol_pct_true) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;value&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;row_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_sims&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_oper&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_meas&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;int_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;oper_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;repeatab_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;tol_pct_true&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Residual&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;part:operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;operator&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It would be cool to see all the data from all the simulations. Recall that the true values of sd for operator, part:operator interaction, and Residual were 1 and that part variation increased across the different sims. All of this is plotted below, with the true values in red while the results of the simulation shown in black. It can be seen that the simulations group nicely around the true values and we can see the uncertainty.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_outcomes_tbl %&amp;gt;%
  ggplot(aes(x = part_sd, y = st_dev_estimate)) +
  geom_point(size = .4) +
  geom_point(data = t, aes(x = part_sd, y = value), color = &amp;quot;firebrick&amp;quot;) +
  facet_wrap(~variable, scales = &amp;quot;free&amp;quot;) +
  labs(
    title = &amp;quot;Simulation Results Across a Range of Possible Part Standard Deviations&amp;quot;,
    subtitle = &amp;quot;Gage R&amp;amp;R with n=10 parts, n=3 operators, n=2 measurements&amp;quot;,
    x = &amp;quot;True Part Standard Deviation&amp;quot;,
    y = &amp;quot;Estimate of Standard Deviation&amp;quot;,
    caption = &amp;quot;red points mark true value of standard deviation for the effect&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-09-simulation-with-a-random-effects-model-gage-r-r-as-a-case-study_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt; Let&#39;s see how the estimated percent tolerance lines up with the true values from the population. This tbl calculates the percent tol across all the simulations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tol_outcomes_tbl &amp;lt;- sim_outcomes_tbl %&amp;gt;%
  filter(variable != &amp;quot;part&amp;quot;) %&amp;gt;%
  group_by(sim_number, row_id) %&amp;gt;%
  summarize(grr_variance_est = sum(variance_estimate)) %&amp;gt;%
  right_join(sim_setup_tbl) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(est_tol_pct = (grr_variance_est) / (part_sd)) %&amp;gt;%
  select(n_part, n_oper, n_meas, int_sd, oper_sd, part_sd, tol_pct_true, est_tol_pct, everything())

tol_outcomes_tbl %&amp;gt;%
  select(n_part, n_oper, n_meas, int_sd, oper_sd, part_sd, tol_pct_true, est_tol_pct, sim_number, row_id) %&amp;gt;%
  head(10) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;n_part&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_oper&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;n_meas&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;int_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;oper_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_sd&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;tol_pct_true&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;est_tol_pct&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;sim_number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;row_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.723929&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.447401&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5.098323&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.882222&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.702724&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.381758&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.619832&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.986048&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.440299&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.441025&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This summary tbl captures the mean from simulations conducted at each level.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tol_est_tbl &amp;lt;- tol_outcomes_tbl %&amp;gt;%
  group_by(row_id, part_var) %&amp;gt;%
  summarize(mean_est_tol_pct = mean(est_tol_pct))

tol_est_tbl %&amp;gt;% kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;row_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;part_var&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;mean_est_tol_pct&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.9902181&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.1352549&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.5002527&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.0354094&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.7362949&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.5330749&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;64&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.3708208&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.2657111&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.1880981&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;512&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.1372343&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1024&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0937739&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Visualize the mean from the simulations vs. the true tol percent:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tol_outcomes_tbl %&amp;gt;%
  ggplot(aes(x = part_var, y = est_tol_pct)) +
  #  geom_point(size = .5) +
  geom_point(aes(x = part_var, y = tol_pct_true), size = 3, color = &amp;quot;limegreen&amp;quot;, position = position_nudge(2), alpha = .85) +
  geom_line(aes(x = part_var, y = tol_pct_true), color = &amp;quot;limegreen&amp;quot;) +
  geom_point(data = tol_est_tbl, aes(x = part_var, y = mean_est_tol_pct), size = 3, color = &amp;quot;firebrick&amp;quot;, position = position_nudge(-2), alpha = .85) +
  geom_hline(yintercept = .3, lty = 2, color = &amp;quot;#2c3e50&amp;quot;) +
  scale_y_continuous(labels = scales::percent) +
  labs(
    title = &amp;quot;Comparison of Simulation Results to True: Tolerance Percent Metric&amp;quot;,
    subtitle = &amp;quot;Green is true population, Red is mean of simulation estimates&amp;quot;,
    x = &amp;quot;Part Variance&amp;quot;,
    y = &amp;quot;Tolerance Percent&amp;quot;,
    caption = &amp;quot;dotted line shows 30% acceptance limit&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-09-simulation-with-a-random-effects-model-gage-r-r-as-a-case-study_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Very nice agreement between the simulations and the true population values. But the above plot just shows the mean. How much uncertainty is expected across experiments at the same settings? Here I show a subset of data below the 100% level (just to keep the plot a little less messy).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tol_outcomes_tbl %&amp;gt;%
  ggplot(aes(x = part_var, y = est_tol_pct)) +
  geom_point(size = .5) +
  geom_point(aes(x = part_var, y = tol_pct_true), size = 3, color = &amp;quot;limegreen&amp;quot;, position = position_nudge(2), alpha = .85) +
  geom_line(aes(x = part_var, y = tol_pct_true), color = &amp;quot;limegreen&amp;quot;) +
  geom_point(data = tol_est_tbl, aes(x = part_var, y = mean_est_tol_pct), size = 3, color = &amp;quot;firebrick&amp;quot;, position = position_nudge(-2), alpha = .85) +
  geom_hline(yintercept = .3, lty = 2) +
  scale_y_continuous(
    labels = scales::percent,
    expand = expansion(),
    limits = c(0, 1)
  ) +
  labs(
    title = &amp;quot;Comparison of Simulation Results to True: Tolerance Percent Metric&amp;quot;,
    subtitle = &amp;quot;Green is true population, Red is mean of simulation estimates, Black is intividual estimates&amp;quot;,
    x = &amp;quot;Part Variance&amp;quot;,
    y = &amp;quot;Tolerance Percent&amp;quot;,
    caption = &amp;quot;dotted line shows 30% acceptance limit&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-09-simulation-with-a-random-effects-model-gage-r-r-as-a-case-study_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pretty interesting. There is quite a bit of uncertainty here and there are quite a few cases where individual simulations fail just due to chance. The probability of this happening is worst when the part variance is around 100-400% of the operator and repeatability sd.&lt;/p&gt;
&lt;p&gt;From this point one could start tweaking any values of interest to see how the uncertainty of the performance metric is affected. For example, you might look at the optimal number of operators or replicates to give the best chance of passing when the true population value would pass. Pretty powerful stuff!&lt;/p&gt;
&lt;p&gt;In this post I attempted to show how a Gage R&amp;amp;R test can be modeled with random effects model. A simulation was constructed using the extracted design matrix Z and a vector of random effects. The simulation was then scaled to see how well the mean of the simulations converge with the true population parameter and the uncertainty was visualized by plotting individual estimates on the same grid. Good luck and I hope this post is useful!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://lindeloev.github.io/tests-as-linear/&#34; class=&#34;uri&#34;&gt;https://lindeloev.github.io/tests-as-linear/&lt;/a&gt;&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Assessment of the Adequacy of Gauge Repeatability and Reproducibility Study Using a Monte Carlo Simulation, &lt;a href=&#34;https://www.hindawi.com/journals/mpe/2017/7237486/&#34; class=&#34;uri&#34;&gt;https://www.hindawi.com/journals/mpe/2017/7237486/&lt;/a&gt;&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Conflicting definitions of random/mixed effects &lt;a href=&#34;https://statmodeling.stat.columbia.edu/2005/01/25/why_i_dont_use/&#34; class=&#34;uri&#34;&gt;https://statmodeling.stat.columbia.edu/2005/01/25/why_i_dont_use/&lt;/a&gt;&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;Some simulations are motivated/recreated/expanded from the excellent paper by Ha et al, &lt;a href=&#34;https://doi.org/10.1155/2017/7237486&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1155/2017/7237486&lt;/a&gt;&lt;a href=&#34;#fnref4&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://debruine.github.io/tutorials/sim-lmer.html&#34; class=&#34;uri&#34;&gt;https://debruine.github.io/tutorials/sim-lmer.html&lt;/a&gt;&lt;a href=&#34;#fnref5&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/&#34; class=&#34;uri&#34;&gt;https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/&lt;/a&gt;&lt;a href=&#34;#fnref6&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn7&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://stats.stackexchange.com/questions/483509/simulating-observations-for-a-2-way-anova-in-r-w-mixed-effects-model-and-reco&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/questions/483509/simulating-observations-for-a-2-way-anova-in-r-w-mixed-effects-model-and-reco&lt;/a&gt;&lt;a href=&#34;#fnref7&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Stopping Rules for Significance Testing in R</title>
      <link>/post/stopping-rules-for-significance-testing-in-r/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/stopping-rules-for-significance-testing-in-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;When doing comparative testing it can be tempting to stop when we see the result that we hoped for. In the case of null hypothesis significance testing (NHST), the desired outcome is often a p-value of &amp;lt; .05. In the medical device industry, bench top testing can cost a lot of money. Why not just recalculate the p-value after every test and stop when the p-value reaches .05? The reason is that the confidence statement attached to your testing is only valid for a specific stopping rule. In other words, to achieve the desired false positive rate we must continue testing speciments until the pre-determined sample size is reached. Evaluating the p-value as you proceed through the testing is known as “peeking” and it’s a statistical no-no.&lt;/p&gt;
&lt;p&gt;Suppose we are attempting to demonstrate that a raw material provided by a new vendor results in better corrosion resistance in finished stents relative to the standard supplier. A bench top test is set up to measure the breakdown potential of each sample in a cyclic potentiodynamic polarization (CPP) test. Our goal is to compare the means of the CPP data from the old supplier and the new supplier. The null hypothesis is that the means are equivalent and if the t-test results in a p-value of .05 or lower then we will reject the null and claim improved performance. What happens to the p-value over the course of the testing? We can run a simulation to monitor the p-value and calculate the effect of peeking on the long-term false positive rate. For the test to perform as intended, the long-term false positive rate should be controlled at a level equal to (1 - confidence level).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(knitr)
library(kableExtra)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, initialize the objects to hold the data and establish any constants we might need later.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initial offset constant to keep minimum group size at n=6
INITIAL_OFFSET &amp;lt;- 5

#Initial values for number of inner and outer loop iterations
n_inner_loop &amp;lt;- 50
n_inner_data &amp;lt;- n_inner_loop + INITIAL_OFFSET
n_outer &amp;lt;- 100

#Initialize empty vector to store p values
store_p_values_vec &amp;lt;- rep(NA, n_inner_loop)

#Initialize a tibble with placeholder column
many_runs_tbl &amp;lt;-  tibble(
  V1 = rep(NA,  n_inner_loop)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The simulation requires 2 for loops. The inner loop performs a series of t-test adding 1 more experimental observation to each group after each iteration. The p-value for that iteration is extracted and stored. In the outer loop, the initial data for the 2 groups are generated randomly from normal distributions. Since we can’t really run a t-test on groups with very low sample sizes, we use an initial offset value so that the t-test loops don’t start until both groups have a few observations from which to calculate the means.&lt;/p&gt;
&lt;p&gt;The p-value for a traditional t-test should be an indication of the long-term false positive rate. In other words: if we ran a t-test on samples drawn from 2 identical populations many times we would see a few large differences in means simply due to chance draws. Among all such simulations, the value at the 95% quantile represents the p-value of .05.&lt;/p&gt;
&lt;p&gt;We can gut-check our simulation in this way by setting the two populations identical to each other and drawing random values in the outer loop as mentioned above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Set seed for repeatability
set.seed(1234)

#Outer loop: replicates a t-test between 2 groups
for(l in 1:n_outer) {
    
    #Generate simulated data for each group.  The parameters are set the same to represent 1 population
    example_group_1 &amp;lt;- rnorm(n = n_inner_data, mean = 10, sd = 4)
    example_group_2 &amp;lt;- rnorm(n = n_inner_data, mean = 10, sd = 4)
    
    #Inner loop: subset the first (i + initial offset) values from grp 1 and grp 2 (y)
    #Perform t-test, extract p-value, store in a vector
    #Increment each group&amp;#39;s size by 1 after each iteration
    for (i in 1:n_inner_loop) {
    t_test_obj &amp;lt;- t.test(x = example_group_1[1:(INITIAL_OFFSET + i)], y = example_group_2[1:(INITIAL_OFFSET + i)])
    store_p_values_vec[i] = t_test_obj$p.value
  }
  
    #Store each vector of n_inner_loop p-values to a column in the many_runs_tbl
    many_runs_tbl[,l] &amp;lt;- store_p_values_vec
}

#visualize tibble 
many_runs_tbl[,1:12] %&amp;gt;% 
  signif(digits = 3) %&amp;gt;%
  head(10) %&amp;gt;% 
  kable(align=rep(&amp;#39;c&amp;#39;, 100))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V1
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V2
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V3
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V4
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V5
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V6
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V7
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V8
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V9
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V10
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V11
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
V12
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3960
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0990
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.204
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.412
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0686
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1450
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.894
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.360
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.721
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.897
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0535
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.668
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1700
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0628
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.106
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.951
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.2240
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0834
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.802
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.614
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.750
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.886
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3170
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.517
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1410
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0929
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.057
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.618
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1360
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0296
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.499
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.561
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.846
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.809
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1740
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.410
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1560
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4050
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.146
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.800
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1690
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0625
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.724
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.700
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.857
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.687
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3620
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.338
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1140
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.2610
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.104
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.992
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.2550
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1860
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.548
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.846
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.727
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.911
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4270
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.334
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0540
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3400
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.143
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.889
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3180
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1740
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.775
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.768
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.795
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.666
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.5630
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.229
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0693
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4030
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.125
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.871
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.7340
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0757
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.826
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.792
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.704
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.755
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4810
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.694
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0324
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4050
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.181
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.930
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.8630
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0617
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.738
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.564
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.501
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.611
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3930
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.472
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0206
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.4550
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.112
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.912
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.7560
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0958
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.644
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.708
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.265
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.687
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.2520
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.638
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0294
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.6690
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.103
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.777
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.8680
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1700
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.664
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.703
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.284
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.912
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.2450
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.441
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Each column above represents n=50 p-values, with each successive value calculated after observing the newest data point in the simulated test sequence. These are the p-values we see if we peek at the calculation every time.&lt;/p&gt;
&lt;p&gt;We need to convert data into tidy format for better visualization. In the tidy format, every column should be a unique variable. The gather() function converts data from wide to long by adding a new variable called “rep_sim_number” and combining all the various runs from 1 to 100 in a single column. In total, we’ll have only 3 columns in the tidy version.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#add new column with row id numbers
final_runs_tbl &amp;lt;- many_runs_tbl %&amp;gt;% 
    mutate(row_id = row_number()) %&amp;gt;%
    select(row_id, everything())

#convert from wide format (untidy) to long (tidy) using gather()
final_runs_tidy_tbl &amp;lt;- final_runs_tbl %&amp;gt;% gather(key = &amp;quot;rep_sim_number&amp;quot;, value = &amp;quot;p_value&amp;quot;, -row_id)

#visualize tidy data structure
final_runs_tidy_tbl %&amp;gt;% 
  head(10) %&amp;gt;% 
  kable(align=rep(&amp;#39;c&amp;#39;, 3))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
row_id
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
rep_sim_number
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
p_value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3963352
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1704697
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1414021
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1557261
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1141854
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0539595
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0693410
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0324232
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
9
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0205511
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0293952
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_runs_tidy_tbl %&amp;gt;% 
  tail(10) %&amp;gt;% 
  kable(align=rep(&amp;#39;c&amp;#39;, 3))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
row_id
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
rep_sim_number
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
p_value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
41
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0515933
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
42
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0509430
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
43
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0386845
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
44
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0567804
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
45
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0762953
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
46
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0933081
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
47
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0755494
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
48
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0558263
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
49
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0731072
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
50
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0496300
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;From here it is straightforward to visualize the trajectory of the p-values through the course of the testing for all 100 simulations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#visualize history of n_outer p-values across n_inner_loop consecutive data points as lineplot
lp_1 &amp;lt;- final_runs_tidy_tbl %&amp;gt;% ggplot(aes(x = row_id, y = p_value, group = rep_sim_number)) +
  geom_line(show.legend = &amp;quot;none&amp;quot;,
            color       = &amp;quot;grey&amp;quot;,
            alpha       = 0.7) +
  labs(x        = &amp;quot;Sequential Benchtop Test Observations&amp;quot;,
       title    = &amp;quot;P-Value History for Difference in Means, Standard T-Test&amp;quot;,
       subtitle = &amp;quot;Both Groups Sampled From Same Population&amp;quot;
       )

lp_1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-06-stopping-rules-for-significance-testing_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The p-values are all over the place! It makes sense that at the pre-determined stopping point (n=50) we would have a spread of p-values since the population parameters for the two groups were identical and p should only rarely land below .05. However, this visualization makes it clear that prior to the stopping point, the path of any particular p-value fluctuates wildly. This is the reason why we can’t stop early or peek!&lt;/p&gt;
&lt;p&gt;Let’s take a look at the false positives, defined here as the runs where the p-value ended up less than or equal to .05 at the pre-determined stopping point of n=50.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#filter for runs that ended in false positives (p &amp;lt; .05) at the last data point
filtered_endpoint_tbl &amp;lt;- final_runs_tidy_tbl %&amp;gt;% 
    filter(row_id == 50,
           p_value &amp;lt;= 0.05) %&amp;gt;%
    select(rep_sim_number) %&amp;gt;%
    rename(&amp;quot;false_positives&amp;quot; = rep_sim_number)

filtered_endpoint_tbl %&amp;gt;% 
  head(10) %&amp;gt;% 
  kable(align=&amp;#39;c&amp;#39;) %&amp;gt;%
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
false_positives
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V23
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V48
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V54
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V77
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V86
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V89
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V100
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So 8 out of 100 simulations have p-values &amp;lt; .05. This is about as expected since the long term false positive rate should be 5%. Having now identified the false positives, we can visualize the trajectory of their p-values after obtaining each successive data point. This is what happens when we peek early or stop the test when we first see a desired outcome. The following code pulls the full history of the false positive test sequences so we can see their paths before the stopping point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#extract full false positive test histories.  %in% filters rows that match anything in the false_positives vector
full_low_runs_tbl &amp;lt;- final_runs_tidy_tbl %&amp;gt;%
    filter(rep_sim_number %in% filtered_endpoint_tbl$false_positives)

#visualize trajectory of false positives by highlighting their traces
lp_2 &amp;lt;- final_runs_tidy_tbl %&amp;gt;% 
    ggplot(aes(x = row_id, y = p_value, group = rep_sim_number)) +
    geom_line(alpha = 0.7, show.legend = FALSE, color = &amp;quot;grey&amp;quot;) +
    geom_line(aes(color = rep_sim_number), data = full_low_runs_tbl, show.legend = FALSE, size = .8, alpha = 0.7) +
    labs(x       = &amp;quot;Sequential Benchtop Test Observations&amp;quot;,
        title    = &amp;quot;P-Value History for Difference in Means, Standard T-Test&amp;quot;,
        subtitle = &amp;quot;Highlighted Traces Represent Sequences with p &amp;lt; .05 at n=50&amp;quot;
        )

lp_2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-06-stopping-rules-for-significance-testing_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt; Indeed, the p-values that end up less than .05 do not take a straight line path to get there. Likewise, there may be tests that dip below p=.05 at some point but culminate well above .05 at the pre-determined stopping point. These represent additional false-positives we invite when we peek or stop early. Let’s identify and count these:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#filter for all run who&amp;#39;s p-value ever dipped to .05 or lower at any point 
low_p_tbl &amp;lt;- final_runs_tidy_tbl %&amp;gt;% 
    filter(p_value &amp;lt;= .05) %&amp;gt;% 
    distinct(rep_sim_number)

#visualize
low_p_tbl %&amp;gt;% 
  head(10) %&amp;gt;% 
  kable(align=&amp;#39;c&amp;#39;) %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
rep_sim_number
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V16
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V17
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V20
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V21
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V23
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V30
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V33
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#count total number of false positives with peeking
low_p_tbl %&amp;gt;% nrow() %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;) %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
x
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The false positives go from 8 to 37!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#filter for only the rows where rep_sim_number here matches at least 1 value from low_p_tbl$rep_sim_number
#this extracts the full history of runs who&amp;#39;s p-value dipped to .05 or lower at any point 
any_low_runs_tbl &amp;lt;- final_runs_tidy_tbl %&amp;gt;%
    filter(rep_sim_number %in% low_p_tbl$rep_sim_number)

#visualize
any_low_runs_tbl %&amp;gt;% 
  head(10) %&amp;gt;% 
  kable(align = rep(&amp;quot;c&amp;quot;, 3))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
row_id
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
rep_sim_number
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
p_value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.3963352
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1704697
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1414021
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1557261
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.1141854
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0539595
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0693410
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0324232
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
9
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0205511
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
V1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.0293952
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#visualize the trajectory or runs that dipped to .05 or below
lp_3 &amp;lt;- final_runs_tidy_tbl %&amp;gt;% 
    ggplot(aes(x = row_id, y = p_value, group = rep_sim_number)) +
    geom_line(alpha = 0.7, show.legend = FALSE, color = &amp;quot;grey&amp;quot;) +
    geom_line(aes(color = rep_sim_number), data = any_low_runs_tbl, show.legend = FALSE, size = .8, alpha = 0.7) +
    labs(x       = &amp;quot;Sequential Benchtop Test Observations&amp;quot;,
        title    = &amp;quot;P-Value History for Difference in Means, Standard T-Test&amp;quot;,
        subtitle = &amp;quot;Highlighted Runs Represent p &amp;lt; .05 at Any Point&amp;quot;
        )

lp_3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-06-stopping-rules-for-significance-testing_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;All these differences in means would be considered significant if we don’t observe our pre-determined stopping rule. This could be a big deal. We might claim a performance benefit when there is none, or waste precious time and money trying to figure out why we can’t replicate an earlier experiment!&lt;/p&gt;
&lt;p&gt;Thanks for reading.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Permutation Test for NHST of 2 Samples in R</title>
      <link>/post/permutation-test-for-nhst-of-2-samples-in-r/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/permutation-test-for-nhst-of-2-samples-in-r/</guid>
      <description>


&lt;p&gt;As engineers, it is not uncommon to be asked to determine whether or not two different configurations of a product perform the same. Perhaps we are asked to compare the durability of a next-generation prototype to the current generation. Sometimes we are testing the flexibility of our device versus a competitor for marketing purposes. Maybe we identify a new vendor for a raw material but must first understand whether the resultant finished product will perform any differently than when built using material from the standard supplier. All of these situations call for a comparison between two groups culminating in a statistically supported recommendation.&lt;/p&gt;
&lt;p&gt;There are a lot of interesting ways to do this: regions of practical equivalence, Bayes Factors, etc. The most common method is still null hypothesis significance testing (NHST) and that’s what I want to explore in this first post. Frequentist methods yield the least useful inferences but have the advantage of a long usage history. Most medical device professionals will be looking for a p-value, so a p-value we must provide.&lt;/p&gt;
&lt;p&gt;In NHST, the plan is usually to calculate a test statistic from our data and use a table of reference values or a statistical program to tell us how surprising our derived statistic would be in a world where the null hypothesis was true. We generally do this by comparing our statistic to a reference distribution or table of tabulated values. Unfortunately, whenever our benchtop data violates an assumption of the reference model, we are no longer comparing apples-to-apples. We must make tweaks and adjustments to try to compensate. It is easy to get overwhelmed in a decision tree of test names and use cases.&lt;/p&gt;
&lt;p&gt;A more robust and intuitive approach to NHST is to replace the off-the-shelf distributions and tables with a simulation built right from our dataset. The workflow any such test is shown below. &lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/./img/workflow.png&#34; width=&#34;75%&#34; height=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The main difference here is that we create the distribution of the data under the null hypothesis using simulation instead of relying on a reference distribution. It’s intuitive, powerful, and fun.&lt;/p&gt;
&lt;p&gt;Imagine we have just designed a benchtop experiment in which we intend to measure the pressure (in mm Hg) at which a pair of overlapped stent grafts started to migrate or disconnect when deployed in a large thoracic aneurysm. &lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/./img/migration_model.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A common null hypothesis for comparing groups is that there is no difference between them. Under this model, &lt;strong&gt;we can treat all the experimental data as one big group instead of 2 different groups&lt;/strong&gt;. We therefore pool the data from our completed experiment into one big group, shuffle it, and randomly assign data points into two groups of the original size. This is our generative model. After each round of permutation and assignment, we calculate and store the test statistic for the observed effect (difference in means between the two groups). Once many simulations have been completed, we’ll see where our true data falls relative to the virtual data.&lt;/p&gt;
&lt;p&gt;One way to setup and execute a simulation-based NHST for comparing two groups in R is as follows (note: there are quicker shortcuts to executing this type of testing but the long version below allows for customization, visualization, and adjust-ability):&lt;/p&gt;
&lt;p&gt;First, we read in the libraries and transcribe the benchtop data into R and evaluate sample size&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(cowplot)
library(knitr)
library(kableExtra)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Migration pressure for predicate device
predicate &amp;lt;-  c(186, 188, 189, 189, 192, 193, 194, 194, 194, 195, 195, 196, 196, 197, 197, 198, 198, 199, 199, 201, 206, 207, 210, 213, 216, 218)

#Migration pressure for next_gen device
next_gen &amp;lt;-  c(189, 190, 192, 193, 193, 196, 199, 199, 199, 202, 203, 204, 205, 206, 206, 207, 208, 208, 210, 210, 212, 214, 216, 216, 217, 218)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Sample Size of Predicate Device Data: 26
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Sample Size of Next-Gen Device Data: 26
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So we have slightly uneven groups and relatively small sample sizes. No problem - assign each group to a variable and convert to tibble format:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Assign variables for each group and convert to tibble
predicate_tbl &amp;lt;- tibble(Device = &amp;quot;Predicate&amp;quot;,
                        Pressure = predicate)

next_gen_tbl &amp;lt;- tibble(Device = &amp;quot;Next_Gen&amp;quot;,
                        Pressure = next_gen)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Combine predicate and next_gen data into a single, pooled group called results_tbl. Taking a look at the first few and last few rows in the pooled tibble confirm it was combined appropriately.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Combine in tibble
results_tbl &amp;lt;- bind_rows(predicate_tbl, next_gen_tbl)
results_tbl %&amp;gt;% 
  head() %&amp;gt;% 
  kable(align = rep(&amp;quot;c&amp;quot;,2))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Device
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Pressure
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
186
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
188
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
189
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
189
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
192
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Predicate
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
193
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_tbl %&amp;gt;% tail() %&amp;gt;% 
  head() %&amp;gt;% 
  kable(align = rep(&amp;quot;c&amp;quot;,2))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Device
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Pressure
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
212
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
214
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
216
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
216
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
217
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Next_Gen
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
218
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now we do some exploratory data analysis to identify general shape and distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Visualize w/ basic boxplot
boxplot_eda &amp;lt;- results_tbl %&amp;gt;% 
    ggplot(aes(x=Device, y=Pressure)) +
    geom_boxplot(
        alpha  = .6,
        width  = .4,
        size   = .8,
        fatten = .5,
        fill   = c(&amp;quot;#FDE725FF&amp;quot;,&amp;quot;#20A486FF&amp;quot;)) +
    labs(
        y        = &amp;quot;Pressure (mm Hg)&amp;quot;,
        title    = &amp;quot;Predicate and Next-Gen Data&amp;quot;,
        subtitle = &amp;quot;Modular Disconnect Pressure&amp;quot;
    )

boxplot_eda&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-10-simple-permutation-test-for-nhst-of-2-samples_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Visualize with density plot
density_eda &amp;lt;- results_tbl %&amp;gt;% 
    ggplot(aes(x = Pressure)) +
    geom_density(aes(fill = Device),
        color = &amp;quot;black&amp;quot;,
        alpha = 0.6
        ) +
    scale_fill_manual(values = c(&amp;quot;#FDE725FF&amp;quot;,&amp;quot;#20A486FF&amp;quot;)) +
    labs(
        x        = &amp;quot;Pressure (mm Hg)&amp;quot;,
        title    = &amp;quot;Predicate and Next-Gen Data&amp;quot;,
        subtitle = &amp;quot;Modular Disconnect Pressure&amp;quot;
    )

density_eda&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-10-simple-permutation-test-for-nhst-of-2-samples_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Yikes! These data do not look normal. Fortunately, the permutation test does not need the data to take on any particular distribution. The main assumption is exchangability, meaning it must be reasonable that the labels could be arbitrarily permuted under the null hypothesis. Provided the sample size is approximately equal, the permutation test is robust against unequal variances.&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; This gives us an attractive option for data shaped as shown above.&lt;/p&gt;
&lt;p&gt;To get started with our permutation test we create a function that accepts 3 arguments: the pooled data from all trials in our benchtop experiment (x), the number of observations taken from Group 1 (n1), and the number of observations taken from Group 2 (n2). The function creates an object containing indices 1:n, then randomly assigns indices into two Groups A and B with sizes to match the original group sizes. It then uses the randomly assigned indices to splice the dataset x producing 2 “shuffled” groups from the original data. Finally, it computes and returns the mean between the 2 randomly assigned groups.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Function to permute vector indices and then compute difference in group means
perm_fun &amp;lt;- function(x, n1, n2){
  n &amp;lt;- n1 + n2
  group_B &amp;lt;- sample(1:n, n1)
  group_A &amp;lt;- setdiff(1:n, group_B)
  mean_diff &amp;lt;- mean(x[group_B] - mean(x[group_A]))
  return(mean_diff)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we initialize an dummy vector called perm_diffs to hold the results of the loop we are about to use. It’ll have all 0’s to start and then we’ll assign values from each iteration of the for loop.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Set number of simulations to run
n_sims &amp;lt;- 10000

#Initialize empty vector
perm_diffs &amp;lt;- rep(0,n_sims)
perm_diffs %&amp;gt;% head()  %&amp;gt;% 
  kable(align = &amp;quot;c&amp;quot;, col.names = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Set up a simple for loop to execute the same evaluation using perm_fun() 10,000 times. On each iteration, we’ll store the results into the corresponding index within perm_diffs that we initialized above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Set seed for reproducibility
set.seed(2015)

#Iterate over desired number of simulations using permutation function
for (i in 1:n_sims)
  perm_diffs[i] = perm_fun(results_tbl$Pressure, 26, 26)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have 10,000 replicates of our permutation test stored in perm_diffs. We want to visualize the data with ggplot so we convert it into a tibble frame using tibble().&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Convert results to a tibble and look at it
perm_diffs_df &amp;lt;- tibble(perm_diffs)
perm_diffs_df %&amp;gt;% head()  %&amp;gt;% 
  kable(align = &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
perm_diffs
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
-0.6153846
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
-3.3076923
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.6923077
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
-2.3846154
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
-0.3076923
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.1538462
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Visualize the difference in means as a histogram and density plot:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Visualize difference in means as a histogram
diffs_histogram_plot &amp;lt;- perm_diffs_df %&amp;gt;% ggplot(aes(perm_diffs)) +
  geom_histogram(fill = &amp;quot;#2c3e50&amp;quot;, color = &amp;quot;white&amp;quot;, binwidth = .3, alpha = 0.8) +
    labs(
        x = &amp;quot;Pressure (mm Hg)&amp;quot;,
        title = &amp;quot;Histogram of Difference in Means&amp;quot;,
        subtitle = &amp;quot;Generated Under Null Hypothesis&amp;quot;
    )

#Visualize difference in means as a density plot
diffs_density_plot &amp;lt;-  perm_diffs_df %&amp;gt;% ggplot(aes(perm_diffs)) +
  geom_density(fill = &amp;quot;#2c3e50&amp;quot;, color = &amp;quot;white&amp;quot;, alpha = 0.8) +
     labs(
        x = &amp;quot;Pressure (mm Hg)&amp;quot;,
        title = &amp;quot;Density Plot of Difference in Means&amp;quot;,
        subtitle = &amp;quot;Generated Under Null Hypothesis&amp;quot;
    )

plot_grid(diffs_histogram_plot, diffs_density_plot)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-10-simple-permutation-test-for-nhst-of-2-samples_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We just simulated many tests from the null hypothesis. These virtual data give us a good understanding of what sort of difference in means we might observe if there truly was no difference between the groups. As expected, most of the time the difference is around 0. But occasionally there is a noticeable difference in means just due to chance.&lt;/p&gt;
&lt;p&gt;But how big was the difference in means from our real world dataset? We’ll call this “baseline difference”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Evaluate difference in means from true data set
predicate_pressure_mean &amp;lt;- mean(predicate_tbl$Pressure)
next_gen_pressure_mean &amp;lt;- mean(next_gen_tbl$Pressure)

baseline_difference &amp;lt;- predicate_pressure_mean - next_gen_pressure_mean
baseline_difference  %&amp;gt;% 
  signif(digits = 3) %&amp;gt;%
  kable(align = &amp;quot;c&amp;quot;, col.names = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
-5.85
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So our real, observed data show a difference in means of -5.85. Is this large or small? With the context of the shuffle testing we already performed, we know exactly how extreme our observed data is and can visualize it with a vertical line.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Visualize real data in context of simulations
g1 &amp;lt;- diffs_histogram_plot + 
  geom_vline(xintercept = baseline_difference, 
             linetype   = &amp;quot;dotted&amp;quot;, 
             color      = &amp;quot;#2c3e50&amp;quot;, 
             size       = 1
             ) 

g2 &amp;lt;- diffs_density_plot + 
  geom_vline(xintercept = baseline_difference, 
             linetype   =&amp;quot;dotted&amp;quot;, 
             color      = &amp;quot;#2c3e50&amp;quot;, 
             size       = 1
             ) 

plot_grid(g1,g2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-10-simple-permutation-test-for-nhst-of-2-samples_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It looks like the our benchtop data was pretty extreme relative to the null. We should start to consider the possibility that this effect was not due solely to chance alone. 0.05 is a commonly used threshold for declaring statistical significance. Let’s see if our data is more or less extreme than 0.05 (solid line).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Calculate the 5% quantile of the simulated distribution for difference in means
the_five_percent_quantile &amp;lt;- quantile(perm_diffs_df$perm_diffs, probs = 0.05)
the_five_percent_quantile&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        5% 
## -4.153846&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Visualize the 5% quantile on the histogram and density plots
g3 &amp;lt;- g1 +
         geom_vline(xintercept = the_five_percent_quantile, 
             color      = &amp;quot;#2c3e50&amp;quot;, 
             size       = 1
             )

g4 &amp;lt;- g2 +
        geom_vline(xintercept = the_five_percent_quantile, 
             color      = &amp;quot;#2c3e50&amp;quot;, 
             size       = 1
             )

plot_grid(g3,g4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-10-simple-permutation-test-for-nhst-of-2-samples_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;100%&#34; height=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can see here that our data is more extreme than the 5% quantile which means our p-value is less than 0.05. This satisfies the traditional, frequentist definition of statistically significant. If we want to actual p-value, we have to determine the percentage of simulated data that are as extreme or more extreme than our observed data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Calculate percentage of simulations as extreme or more extreme than the observed data (p-value)
p_value &amp;lt;- perm_diffs_df %&amp;gt;% 
    filter(perm_diffs &amp;lt;= baseline_difference) %&amp;gt;%
    nrow() / n_sims

paste(&amp;quot;The empirical p-value is: &amp;quot;, p_value)  %&amp;gt;% 
  kable(align = &amp;quot;c&amp;quot;, col.names = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
The empirical p-value is: 0.0096
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Our p-value is well below 0.05. This is likely enough evidence for us to claim that there was a statistically significant difference observed between the Next Gen device and the predicate device.&lt;/p&gt;
&lt;p&gt;Our marketing team will be thrilled, but we should always be wary that statistically significant does not mean practically important. Domain knowledge should provide the context to interpret the relevance of the observed difference. A difference in mean Pressure of a few mm Hg seems to be enough to claim a statistically significant improvement in our new device vs. the predicate, but is it enough for our marketing team to make a meaningful campaign? In reality, a few mm Hg is noticeable on the bench but is likely lost in the noise of anatomical variation within real patient anatomies.&lt;/p&gt;
&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Probably Overthinking It, &lt;a href=&#34;http://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html&#34; class=&#34;uri&#34;&gt;http://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html&lt;/a&gt;&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;J ENDOVASC THER 2011;18:559-568, open access &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3163409/&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3163409/&lt;/a&gt;&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Simulations and Explanation of Unequal Variance and Sample Sizes, &lt;a href=&#34;https://stats.stackexchange.com/questions/87215/does-a-big-difference-in-sample-sizes-together-with-a-difference-in-variances-ma&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/questions/87215/does-a-big-difference-in-sample-sizes-together-with-a-difference-in-variances-ma&lt;/a&gt;&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>